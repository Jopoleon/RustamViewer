{"version":3,"sources":["config.js","app/appActions.js","scenes/Login/loginActions.js","scenes/Login/loginReducer.js","app/appReducer.js","scenes/Tables/tablesUtil.js","scenes/Tables/tablesActions.js","scenes/Tables/tablesReducer.js","scenes/Profile/profileActions.js","scenes/Profile/profileReducer.js","scenes/Companies/companiesActions.js","scenes/Companies/companiesReducer.js","rootReducer.js","scenes/Login/index.js","scenes/Tables/JsonTable.js","scenes/Tables/index.js","scenes/Companies/ProjectComponent.js","scenes/Companies/AddProjectCard.js","scenes/Companies/index.js","scenes/Profile/CompanyCard.js","scenes/Profile/ProjectCard.js","scenes/Profile/index.js","scenes/EditProfile/index.js","scenes/AddUser/index.js","scenes/AddCompany/index.js","scenes/AddProject/index.js","components/LeftMenu.js","components/TopMenu.js","app/App.js","index.js"],"names":["rootUrl","actions","setUserData","createAction","authenticateUser","logout","initAuth","login","startLoggingIn","setLoadingError","logoutAction","dispatch","getState","a","axios","get","withCredentials","appActions","handleActions","loginActions","state","isLoadingLogging","errorWhenLogging","errorMessage","action","payload","isError","message","defaultState","isLoggedIn","firstName","lastName","isAdmin","tableNameEnum","setInitData","setLoading","initData","searchField","filterList","currentTable","projectId","loading","tablesActions","tableName","response","startLoading","setProfileData","profileActions","userData","isDataLoaded","isDataLoading","user","companyData","companies","setCompanies","getCompanies","data","companiesActions","combineReducers","appReducer","loginReducer","tablesReducer","profileReducer","companiesReducer","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submitButtonWrapper","position","submitButtonProgress","top","left","marginLeft","submit","errorText","red","SignInSide","classes","useDispatch","useSelector","history","useHistory","useEffect","push","useState","userName","setUserName","password","setpassword","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","noValidate","onSubmit","e","preventDefault","length","post","email","first_name","second_name","is_admin","loginAction","TextField","value","onChange","target","fullWidth","label","autoFocus","name","id","Button","disabled","CircularProgress","size","Box","mt","CellHeader","props","showFilter","setShowFilter","setValue","TableCell","style","styles","rowHeader","sortBy","onClick","toggleSort","cursor","title","helperText","onKeyPress","key","addFilter","TablePaginationActions","count","page","rowsPerPage","onChangePage","flexShrink","IconButton","event","aria-label","Math","ceil","max","justifyContent","JsonTable","setData","keys","setKeys","isFetched","setIsFetched","error","setError","setSortBy","search","setSearch","currentPage","setCurrentPage","setRowsPerPage","tableData","setTableData","setCount","filters","setFilters","query","URLSearchParams","useLocation","removeFilter","newFilters","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","url","method","then","req","Object","callIdFromQuerry","callid","catch","newJson","filter","values","some","toString","toLowerCase","includes","newData","map","direction","sort","b","localeCompare","undefined","numeric","sensitivity","slice","autocomplete","InputProps","startAdornment","InputAdornment","Chip","filename","lastIndexOf","borderRadius","border","fontSize","fontWeight","padding","textDecoration","TableContainer","Table","TableHead","TableRow","toUpperCase","val","handleChangeSort","TableBody","row","nextUrl","minWidth","textAlign","controls","preload","src","TableFooter","TablePagination","rowsPerPageOptions","colSpan","onChangeRowsPerPage","ActionsComponent","tableEnum","callsout","calls","vars","ars","TablesComponent","tableFromQuery","console","log","selected","setSelected","MenuButton","callsOutKeys","callsKeys","varsKeys","arsKeys","styled","contact_attempt_fact_key","contact_info","dialing_mode","campaing","call_result","record_type","record_status","calling_list","contact_info_type","start_time","end_time","record_id","chain_id","chain_n","attempt","daily_from","daily_till","dial_sched_time","project_id","customer_data","interaction_id","source_address","target_address","interaction_type","menu_name","ani","seq","action_status","action_description","enter_menu_time","leave_menu_time","action_time","utterance","interpretation","confidence","inputmode","waverecord","media","ProjectComponent","projectName","searchText","isSearching","userCount","allUsers","currentUsers","focused","setFocused","selectedUser","setSelectedUser","usersToAdd","u","every","cu","Card","CardContent","gutterBottom","Badge","badgeContent","paddingBottom","Divider","FormControl","InputLabel","Select","c","MenuItem","secondName","find","project_name","user_id","user_full_name","AddProjectCard","Fab","Companies","setSearchText","setIsSearching","useGetCompanies","currentCompanies","setCurrentCompanies","onReset","_inputText","inputText","newCompanies","comp","apps","company","i","isCompSearched","marginBottom","flexWrap","app","AppUsers","users","CompanyCard","companyName","companyDescription","imageUrl","CardActionArea","CardMedia","ProjectCard","useGetData","Profile","List","list","ListItem","appNames","appName","maxWidth","background","divider","nested","paddingLeft","EditProfile","isLoading","setIsLoading","setName","surName","setSurName","setPassword","setIsError","put","textField","AddUser","selectedCompany","setSelectedCompany","setEmail","setLogin","goodResponse","setGoodResponse","companyID","o","AddCompany","AddProject","isRecording","setIsRecording","selectedTrans","setSelectedTrans","selectedLanguage","setSelectedLanguage","company_id","is_recording","transcription","language","FormControlLabel","control","Checkbox","checked","LeftMenu","Drawer","button","ListItemIcon","ListItemText","primary","appBar","zIndex","drawer","companyLogo","marginRight","userNameTypography","flexGrow","TopMenu","React","anchorEl","setAnchorEl","open","Boolean","handleClose","AppBar","Toolbar","aria-controls","aria-haspopup","currentTarget","Menu","onClose","useAuth","authResponse","status","App","exact","path","to","pathname","ProtectedRoute","children","rest","render","location","store","createStore","rootReducer","applyMiddleware","thunk","document","getElementById"],"mappings":"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","file":"static/js/main.e17ada4c.chunk.js","sourcesContent":["export const rootUrl = \"http://127.0.0.1:8899\";\r\n","import { createAction } from \"redux-actions\";\r\nimport axios from \"axios\";\r\n\r\nimport { rootUrl } from \"../config\";\r\n\r\nconst actions = {\r\n  setUserData: createAction(\"LOGIN\"),\r\n  authenticateUser: createAction(\"AUTHENTICATE_USER\"),\r\n  logout: createAction(\"USER_LOGOUT\"),\r\n  initAuth: createAction(\"INIT_AUTH\"),\r\n};\r\n\r\nexport function authenticate() {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const authResponse = await axios.get(`${rootUrl}/auth`, {\r\n        withCredentials: true,\r\n      });\r\n\r\n      if (authResponse.status === 200) {\r\n        const { data } = authResponse;\r\n        dispatch(\r\n          actions.setUserData({\r\n            firstName: data.first_name,\r\n            lastName: data.second_name,\r\n            isAdmin: data.is_admin,\r\n          })\r\n        );\r\n      }\r\n    } catch (e) {\r\n    } finally {\r\n      dispatch(actions.initAuth());\r\n    }\r\n  };\r\n}\r\n\r\nexport default actions;\r\n","import { createAction } from \"redux-actions\";\r\nimport axios from \"axios\";\r\nimport appActions from \"../../app/appActions\";\r\n\r\nimport { rootUrl } from \"../../config\";\r\n\r\nconst actions = {\r\n  login: createAction(\"LOGIN\"),\r\n  startLoggingIn: createAction(\"CHANGE LOADING STATE\"),\r\n  setLoadingError: createAction(\"SET LOADING ERROR\"),\r\n};\r\n\r\nexport function loginAction(userName, password) {\r\n  return async (dispatch, getState) => {\r\n    if (userName.length > 0 && password.length > 0) {\r\n      dispatch(actions.startLoggingIn());\r\n      try {\r\n        const { data } = await axios.post(\r\n          `${rootUrl}/login`,\r\n          {\r\n            email: userName,\r\n            password,\r\n          },\r\n          { withCredentials: true }\r\n        );\r\n\r\n        await dispatch(\r\n          appActions.setUserData({\r\n            firstName: data.first_name,\r\n            lastName: data.second_name,\r\n            isAdmin: data.is_admin,\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          actions.setLoadingError({\r\n            isError: true,\r\n            message: \"Username is not correct\",\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      dispatch(\r\n        actions.setLoadingError({\r\n          isError: true,\r\n          message: \"Username and Password should be not empty\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport function logoutAction() {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const response = await axios.get(`${rootUrl}/logout`, {\r\n        withCredentials: true,\r\n      });\r\n    } catch {}\r\n    dispatch(appActions.logout());\r\n  };\r\n}\r\n\r\nexport default actions;\r\n","import { handleActions } from \"redux-actions\";\r\nimport loginActions from \"./loginActions\";\r\n\r\nconst defaultState = {\r\n  isLoadingLogging: false,\r\n  errorWhenLogging: false,\r\n  errorMessage: \"\",\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [loginActions.startLoggingIn]: (state) => {\r\n      return {\r\n        ...state,\r\n        isLoadingLogging: true,\r\n        errorWhenLogging: false,\r\n        errorMessage: \"\",\r\n      };\r\n    },\r\n\r\n    [loginActions.setLoadingError]: (state, action) => {\r\n      const { isError, message } = action.payload;\r\n      return {\r\n        ...state,\r\n        isLoadingLogging: false,\r\n        errorWhenLogging: isError,\r\n        errorMessage: message || \"\",\r\n      };\r\n    },\r\n  },\r\n  defaultState\r\n);\r\n","import { handleActions } from \"redux-actions\";\r\nimport appActions from \"./appActions\";\r\n\r\nconst defaultState = {\r\n  isLoggedIn: false,\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  isAdmin: false,\r\n  initAuth: false,\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [appActions.initAuth]: (state) => {\r\n      return {\r\n        ...state,\r\n        initAuth: true,\r\n      };\r\n    },\r\n    [appActions.logout]: () => {\r\n      return {\r\n        ...defaultState,\r\n        initAuth: true,\r\n      };\r\n    },\r\n    [appActions.setUserData]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isLoggedIn: true,\r\n      };\r\n    },\r\n  },\r\n  defaultState\r\n);\r\n","export const tableNameEnum = {\r\n  calls: \"calls\",\r\n  callsout: \"callsout\",\r\n  vars: \"vars\",\r\n  ars: \"ars\",\r\n};\r\n","import { createAction } from \"redux-actions\";\r\nimport axios from \"axios\";\r\nimport { rootUrl } from \"../../config\";\r\n\r\nimport { tableNameEnum } from \"./tablesUtil\";\r\n\r\nconst actions = {\r\n  setInitData: createAction(\"Set_init_Data\"),\r\n  setLoading: createAction(\"setLoading\"),\r\n};\r\n\r\nexport function fetchInitData(tableName) {\r\n  return async (dispatch, getState) => {\r\n    dispatch(actions.setLoading(true));\r\n\r\n    const response = await axios.get(`${rootUrl}/${tableName}`, {\r\n      withCredentials: true,\r\n    });\r\n\r\n    dispatch(actions.setInitData({tableName, response: response || []}))\r\n  };\r\n}\r\n\r\nexport default actions;\r\n","import { handleActions } from \"redux-actions\";\r\nimport tablesActions from \"./tablesActions\";\r\nimport { tableNameEnum } from \"./tablesUtil\";\r\n\r\nconst defaultState = {\r\n  initData: {},\r\n  searchField: \"\",\r\n  filterList: [],\r\n  currentTable: tableNameEnum.calls,\r\n  projectId: \"\",\r\n  loading: true,\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [tablesActions.setLoading]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n    },\r\n\r\n    [tablesActions.setInitData]: (state, action) => {\r\n      const { tableName, response } = action.payload;\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        initData: {\r\n          ...state.initData,\r\n          [tableName]: response,\r\n        },\r\n      };\r\n    },\r\n  },\r\n  defaultState\r\n);\r\n","import { createAction } from \"redux-actions\";\r\nimport axios from \"axios\";\r\nimport appActions from \"../../app/appActions\";\r\n\r\nimport { rootUrl } from \"../../config\";\r\n\r\nconst actions = {\r\n  startLoading: createAction(\"START_LOADING_PROFILE\"),\r\n  setProfileData: createAction(\"SET_PROFILE_DATA\"),\r\n};\r\n\r\nexport function startLoading(userName, password) {\r\n  return async (dispatch, getState) => {\r\n    dispatch(actions.startLoading());\r\n\r\n    const response = await axios.get(`${rootUrl}/user`, {\r\n      withCredentials: true,\r\n    });\r\n\r\n    dispatch(actions.setProfileData(response.data));\r\n  };\r\n}\r\n\r\nexport default actions;\r\n","import { handleActions } from \"redux-actions\";\r\nimport profileActions from \"./profileActions\";\r\n\r\nconst defaultState = {\r\n  isDataLoaded: false,\r\n  isDataLoading: false,\r\n  isError: false,\r\n  userData: {},\r\n  companyData: {},\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [profileActions.startLoading]: (state) => {\r\n      return {\r\n        ...state,\r\n        userData: {},\r\n        isDataLoaded: false,\r\n        isDataLoading: true,\r\n      };\r\n    },\r\n\r\n    [profileActions.setProfileData]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        userData: action.payload.user,\r\n        companyData: action.payload.companies,\r\n        isError: false,\r\n        isDataLoaded: true,\r\n        isDataLoading: false,\r\n      };\r\n    },\r\n  },\r\n  defaultState\r\n);\r\n","import { createAction } from \"redux-actions\";\r\nimport axios from \"axios\";\r\n\r\nimport { rootUrl } from \"../../config\";\r\n\r\nconst actions = {\r\n  setCompanies: createAction(\"SET_COMPANIES\"),\r\n  setLoading: createAction(\"SET_COMPANIES_LOADING\"),\r\n};\r\n\r\nexport function getCompanies() {\r\n  return async (dispatch, getState) => {\r\n    dispatch(actions.setLoading(true));\r\n\r\n    const response = await axios.get(`${rootUrl}/companies`, {\r\n      withCredentials: true,\r\n    });\r\n\r\n    dispatch(actions.setCompanies(response.data.companies));\r\n  };\r\n}\r\n\r\nexport default actions;\r\n","import { handleActions } from \"redux-actions\";\r\nimport companiesActions from \"./companiesActions\";\r\n\r\nconst defaultState = {\r\n  companies: [],\r\n  isDataLoaded: false,\r\n  isDataLoading: false,\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [companiesActions.setCompanies]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        companies: action.payload,\r\n        isDataLoaded: true,\r\n        isDataLoading: false,\r\n      };\r\n    },\r\n\r\n    [companiesActions.setLoading]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        isDataLoading: action.payload,\r\n      };\r\n    },\r\n  },\r\n  defaultState\r\n);\r\n","import { combineReducers } from \"redux\";\r\nimport loginReducer from \"./scenes/Login/loginReducer\";\r\nimport appReducer from \"./app/appReducer\";\r\nimport tablesReducer from \"./scenes/Tables/tablesReducer\";\r\nimport profileReducer from \"./scenes/Profile/profileReducer\";\r\nimport companiesReducer from \"./scenes/Companies/companiesReducer\";\r\n\r\nexport default combineReducers({\r\n  appReducer,\r\n  loginReducer,\r\n  tablesReducer,\r\n  profileReducer,\r\n  companiesReducer\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { loginAction } from \"./loginActions\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        ForteCom\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage:\r\n      \"url(https://cutewallpaper.org/21/wallpapers-with-numbers/Mathematics-HD-Desktop-Wallpapers-PixelsTalk.Net.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submitButtonWrapper: {\r\n    margin: theme.spacing(1),\r\n    position: \"relative\",\r\n  },\r\n  submitButtonProgress: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  errorText: {\r\n    color: red[500],\r\n  },\r\n}));\r\n\r\nexport default function SignInSide() {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  const { isLoadingLogging, errorWhenLogging, errorMessage } = useSelector(\r\n    (state) => state.loginReducer\r\n  );\r\n\r\n  const { isLoggedIn } = useSelector((state) => state.appReducer);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(loginAction(userName, password));\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={onSubmit}>\r\n            <TextField\r\n              value={userName}\r\n              onChange={(e) => setUserName(e.target.value)}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"User Name\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              value={password}\r\n              onChange={(e) => setpassword(e.target.value)}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n            />\r\n\r\n            {errorWhenLogging && (\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Typography\r\n                    component=\"h1\"\r\n                    variant=\"h5\"\r\n                    className={classes.errorText}\r\n                  >\r\n                    {errorMessage}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n\r\n            <div className={classes.submitButtonWrapper}>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                disabled={isLoadingLogging}\r\n              >\r\n                {!isLoadingLogging ? \"Sign in\" : <span>&nbsp;&nbsp;</span>}\r\n              </Button>\r\n              {isLoadingLogging && (\r\n                <CircularProgress\r\n                  size={24}\r\n                  className={classes.submitButtonProgress}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            {/* <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid> */}\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\n\r\nimport CsvDownload from \"react-json-to-csv\";\r\n\r\nimport UpDownIcon from \"@material-ui/icons/ImportExport\";\r\nimport UpIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport DownIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\nimport GridLoader from \"react-spinners/GridLoader\";\r\nimport axios from \"axios\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\n\r\nimport { rootUrl } from \"../../config\";\r\n\r\nfunction CellHeader(props) {\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const width = props.width || 200;\r\n\r\n  return (\r\n    <TableCell>\r\n      <div style={{ width }}>\r\n        <div style={styles.rowHeader}>\r\n          {props.sortBy === \"up\" && (\r\n            <UpIcon\r\n              onClick={() => props.toggleSort()}\r\n              style={{ cursor: \"pointer\" }}\r\n            />\r\n          )}\r\n\r\n          {props.sortBy === \"down\" && (\r\n            <DownIcon\r\n              onClick={() => props.toggleSort()}\r\n              style={{ cursor: \"pointer\" }}\r\n            />\r\n          )}\r\n\r\n          {!props.sortBy && (\r\n            <UpDownIcon\r\n              onClick={() => props.toggleSort()}\r\n              style={{ cursor: \"pointer\" }}\r\n            />\r\n          )}\r\n          <span style={{ width: \"100%\" }}>{props.title}</span>\r\n          <FilterList\r\n            onClick={() => setShowFilter(!showFilter)}\r\n            style={{ cursor: \"pointer\" }}\r\n          />\r\n        </div>\r\n        {showFilter && (\r\n          <TextField\r\n            helperText=\"Filter\"\r\n            value={value}\r\n            onChange={(e) => setValue(e.target.value)}\r\n            onKeyPress={(e) => e.key === \"Enter\" && props.addFilter(value)}\r\n          />\r\n        )}\r\n      </div>\r\n    </TableCell>\r\n  );\r\n}\r\n\r\nfunction TablePaginationActions(props) {\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div style={{ flexShrink: 0, marginLeft: 10 }}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        <FirstPageIcon />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        <KeyboardArrowLeft />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        <KeyboardArrowRight />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        <LastPageIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction JsonTable(props) {\r\n  const [initData, setInitData] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [keys, setKeys] = useState([]);\r\n  const [isFetched, setIsFetched] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [sortBy, setSortBy] = useState({});\r\n  const [search, setSearch] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(25);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [filters, setFilters] = useState({});\r\n\r\n  const query = useQuery();\r\n  const history = useHistory();\r\n\r\n  const addFilter = (key, value) => {\r\n    if (value === \"\") {\r\n      return removeFilter(key);\r\n    }\r\n    const newFilters = { ...filters };\r\n    newFilters[key] = value;\r\n    setFilters(newFilters);\r\n  };\r\n\r\n  const removeFilter = (key) => {\r\n    const newFilters = { ...filters };\r\n    delete newFilters[key];\r\n    setFilters(newFilters);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setCurrentPage(0);\r\n  };\r\n\r\n  const handleChangeSort = (key) => {\r\n    if (sortBy.key !== key) {\r\n      setSortBy({\r\n        key,\r\n        direction: \"up\",\r\n      });\r\n    } else {\r\n      if (sortBy.direction === \"up\") {\r\n        setSortBy({\r\n          key,\r\n          direction: \"down\",\r\n        });\r\n      } else {\r\n        setSortBy({});\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(props.url, {\r\n        method: \"get\",\r\n        withCredentials: true,\r\n      })\r\n      .then((req) => {\r\n        if (req.data) {\r\n          if (req.data.length > 0) {\r\n            setKeys(Object.keys(props.keys));\r\n            setData(req.data);\r\n            setInitData(req.data);\r\n            setCount(req.data.length);\r\n          }\r\n        } else {\r\n          setError(true);\r\n        }\r\n\r\n        setIsFetched(true);\r\n\r\n        const callIdFromQuerry = query.get(\"callid\");\r\n\r\n        if (callIdFromQuerry) {\r\n          setFilters({ callid: callIdFromQuerry });\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        setError(true);\r\n        setIsFetched(true);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    let newJson = [...initData];\r\n\r\n    if (search !== \"\") {\r\n      newJson = initData.filter((data) =>\r\n        Object.values(data).some((e) => {\r\n          if (!e) return false;\r\n          return e.toString().toLowerCase().includes(search.toLowerCase());\r\n        })\r\n      );\r\n    }\r\n\r\n    let newData = [...newJson];\r\n\r\n    Object.keys(filters).map((key) => {\r\n      newData = newData.filter((data) => data[key].toString() === filters[key]);\r\n    });\r\n\r\n    if (sortBy.key) {\r\n      if (sortBy.direction === \"up\") {\r\n        newData = newData.sort((a, b) =>\r\n          (\"\" + a[sortBy.key]).localeCompare(\"\" + b[sortBy.key], undefined, {\r\n            numeric: true,\r\n            sensitivity: \"base\",\r\n          })\r\n        );\r\n      } else {\r\n        newData = newData.sort((a, b) =>\r\n          (\"\" + b[sortBy.key]).localeCompare(\"\" + a[sortBy.key], undefined, {\r\n            numeric: true,\r\n            sensitivity: \"base\",\r\n          })\r\n        );\r\n      }\r\n    }\r\n\r\n    setData(newData);\r\n    setCount(newData.length);\r\n    setLoading(false);\r\n  }, [filters, search, sortBy]);\r\n\r\n  useEffect(() => {\r\n    setTableData(\r\n      data.slice(\r\n        currentPage * rowsPerPage,\r\n        currentPage * rowsPerPage + rowsPerPage\r\n      )\r\n    );\r\n  }, [currentPage, rowsPerPage, data]);\r\n\r\n  const renderContent = () => {\r\n    if (!isFetched || loading) {\r\n      return (\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <GridLoader loading={true} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (isFetched && error) {\r\n      return <span>Error</span>;\r\n    }\r\n\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {keys.map((key) => (\r\n                <CellHeader\r\n                  title={props.keys[key].name.toUpperCase()}\r\n                  addFilter={(val) => addFilter(key, val)}\r\n                  toggleSort={() => handleChangeSort(key)}\r\n                  sortBy={sortBy.key === key ? sortBy.direction : null}\r\n                />\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {tableData.map((row) => (\r\n              <TableRow key={row.id}>\r\n                {keys.map((key) => (\r\n                  <TableCell\r\n                    onClick={() =>\r\n                      key === \"callid\" &&\r\n                      props.nextUrl &&\r\n                      history.push(\r\n                        `tables/?table=${props.nextUrl}&callid=${row[key]}`\r\n                      )\r\n                    }\r\n                    style={{\r\n                      cursor:\r\n                        key === \"callid\" && props.nextUrl ? \"pointer\" : \"auto\",\r\n                    }}\r\n                  >\r\n                    {key === \"waverecord\" ? (\r\n                      <div\r\n                        style={{\r\n                          minWidth: 300,\r\n                          width: \"100%\",\r\n                          textAlign: \"center\",\r\n                        }}\r\n                      >\r\n                        <audio controls preload=\"none\">\r\n                          <source\r\n                            src={`${rootUrl}/waverecord/${row.id}`}\r\n                            type=\"audio/wav\"\r\n                          />\r\n                        </audio>\r\n                      </div>\r\n                    ) : (\r\n                      row[key]\r\n                    )}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 25, 100, 200]}\r\n                colSpan={3}\r\n                count={count}\r\n                rowsPerPage={rowsPerPage}\r\n                page={currentPage}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n      <TextField\r\n        id=\"standard-search\"\r\n        label=\"Search field\"\r\n        type=\"search\"\r\n        style={{ width: \"200px\", margin: \"10px 0px 0px 10px\" }}\r\n        autocomplete=\"off\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <SearchIcon />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        onKeyPress={(e) => e.key === \"Enter\" && setSearch(e.target.value)}\r\n      />\r\n\r\n      <div style={{ margin: \"10px 0px 0px 10px\", display: \"flex\" }}>\r\n        {Object.keys(filters).map((key) => (\r\n          <Chip label={`${key}: ${filters[key]}`} style={{ margin: 5 }} />\r\n        ))}\r\n      </div>\r\n\r\n      <Typography style={{ margin: \"10px 0px 0px 10px\" }}>\r\n        {sortBy.key ? (\r\n          `Sort by ${sortBy.key} : ${\r\n            sortBy.direction === \"up\" ? \"desc\" : \"asc\"\r\n          }`\r\n        ) : (\r\n          <span>&nbsp;&nbsp;</span>\r\n        )}\r\n      </Typography>\r\n\r\n      <CsvDownload\r\n        data={tableData}\r\n        filename={`${props.url.slice(props.url.lastIndexOf(\"/\") + 1)}.csv`}\r\n        style={{\r\n          borderRadius: \"6px\",\r\n          border: \"1px solid black\",\r\n          fontSize: \"15px\",\r\n          fontWeight: \"bold\",\r\n          padding: \"6px 14px\",\r\n          textDecoration: \"none\",\r\n          cursor: \"pointer\",\r\n          width: \"150px\",\r\n          margin: 10,\r\n        }}\r\n      >\r\n        Export to CSV\r\n      </CsvDownload>\r\n\r\n      {renderContent()}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  rowHeader: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n};\r\n\r\nexport default JsonTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport JsonTable from \"./JsonTable\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport styled from \"styled-components\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchInitData } from \"./tablesActions\";\r\nimport { rootUrl } from \"../../config\";\r\nimport { tableNameEnum } from \"./tablesUtil\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\n\r\nimport \"typeface-roboto\";\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst tableEnum = {\r\n  callsout: 1,\r\n  calls: 2,\r\n  vars: 3,\r\n  ars: 4,\r\n};\r\n\r\nexport default function TablesComponent() {\r\n  const query = useQuery();\r\n\r\n  const tableFromQuery = tableEnum[query.get(\"table\")];\r\n\r\n  console.log(tableFromQuery);\r\n\r\n  const [selected, setSelected] = useState(tableFromQuery || 2);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setSelected(tableFromQuery || 1);\r\n  }, [tableFromQuery]);\r\n\r\n  return (\r\n    <div style={{ padding: 10 }}>\r\n      <Typography variant=\"h6\">ОТЧЕТЫ</Typography>\r\n      <div style={{ display: \"flex\", marginTop: 10 }}>\r\n        <MenuButton\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            history.push(\"/tables?table=callsout\");\r\n          }}\r\n          color={selected === 1 ? \"primary\" : \"auto\"}\r\n        >\r\n          Исходящие звонки\r\n        </MenuButton>\r\n        <MenuButton\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            history.push(\"/tables?table=calls\");\r\n          }}\r\n          color={selected === 2 ? \"primary\" : \"auto\"}\r\n        >\r\n          Все звонки\r\n        </MenuButton>\r\n\r\n        <MenuButton\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            history.push(\"/tables?table=vars\");\r\n          }}\r\n          color={selected === 3 ? \"primary\" : \"auto\"}\r\n        >\r\n          Голосовые сценарии\r\n        </MenuButton>\r\n        <MenuButton\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            history.push(\"/tables?table=ars\");\r\n          }}\r\n          color={selected === 4 ? \"primary\" : \"auto\"}\r\n        >\r\n          Распознование диалога\r\n        </MenuButton>\r\n      </div>\r\n\r\n      {selected === 1 && (\r\n        <JsonTable\r\n          url={`${rootUrl}/callsout`}\r\n          tableName={tableNameEnum.callsout}\r\n          nextUrl={`calls`}\r\n          keys={callsOutKeys}\r\n        />\r\n      )}\r\n      {selected === 2 && (\r\n        <JsonTable\r\n          url={`${rootUrl}/calls`}\r\n          tableName={tableNameEnum.calls}\r\n          nextUrl={`vars`}\r\n          keys={callsKeys}\r\n        />\r\n      )}\r\n      {selected === 3 && (\r\n        <JsonTable\r\n          url={`${rootUrl}/vars`}\r\n          tableName={tableNameEnum.ars}\r\n          nextUrl={`ars`}\r\n          keys={varsKeys}\r\n        />\r\n      )}\r\n\r\n      {selected === 4 && (\r\n        <JsonTable\r\n          url={`${rootUrl}/ars`}\r\n          tableName={tableNameEnum.vars}\r\n          keys={arsKeys}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst MenuButton = styled(Button)`\r\n  && {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nconst callsOutKeys = {\r\n  contact_attempt_fact_key: { name: \"идентифискатор\" },\r\n  contact_info: { name: \"номер контакта\" },\r\n  dialing_mode: { name: \"режим звонка\" },\r\n  campaing: { name: \"название компании\" },\r\n  call_result: { name: \"результат звонка\" },\r\n  record_type: { name: \"тип записи\" },\r\n  record_status: { name: \"статус записи\" },\r\n  calling_list: { name: \"лист обзовна\" },\r\n  contact_info_type: { name: \"тип контакта\t\" },\r\n  callid: { name: \"callid\" },\r\n  start_time: { name: \"начало звонка\t\" },\r\n  end_time: { name: \"онец звонка\" },\r\n  record_id: { name: \"id записи\" },\r\n  chain_id: { name: \"идентификатор цепочки\" },\r\n  chain_n: { name: \"номер в цепочки\" },\r\n  attempt: { name: \"колво попыток\" },\r\n  daily_from: { name: \"звонок с\" },\r\n  daily_till: { name: \"звонок по \" },\r\n  dial_sched_time: { name: \"время перезвона\" },\r\n  project_id: { name: \"прокт\" },\r\n  customer_data: { name: \"пользовательские данные\" },\r\n};\r\n\r\nconst callsKeys = {\r\n  interaction_id: { name: \"идентификатор\" },\r\n  source_address: { name: \"АОН\" },\r\n  target_address: { name: \"Номер сервиса\" },\r\n  interaction_type: { name: \"Типа звонка\" },\r\n  start_time: { name: \"Начало звонка\" },\r\n  end_time: { name: \"Конец звонка\" },\r\n  project_id: { name: \"проект\" },\r\n  customer_data: { name: \"пользовательские данные\" },\r\n  callid: { name: \"callid\" },\r\n};\r\n\r\nconst varsKeys = {\r\n  project_id: { name: \"проект\" },\r\n  menu_name: { name: \"пункт меню\" },\r\n  ani: { name: \"АОН\" },\r\n  callid: { name: \"CALLID\" },\r\n  seq: { name: \"последовательность\" },\r\n  action_status: { name: \"действие\" },\r\n  action_description: { name: \"описание действия\" },\r\n  enter_menu_time: { name: \"вермя входа в меню\" },\r\n  leave_menu_time: { name: \"время выхода из меню\" },\r\n  action_time: { name: \"время действия\" },\r\n};\r\n\r\nconst arsKeys = {\r\n  project_id: { name: \"проект\" },\r\n  menu_name: { name: \"пункт меню\" },\r\n  ani: { name: \"АОН\" },\r\n  callid: { name: \"CALLID\" },\r\n  seq: { name: \"последовательность\" },\r\n  utterance: { name: \"произнесенная фраза\" },\r\n  interpretation: { name: \"интерпретация\" },\r\n  confidence: { name: \"точность\" },\r\n  inputmode: { name: \"режим ввода\" },\r\n  waverecord: { name: \"прослушать фразу\" },\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\n\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport axios from \"axios\";\r\nimport { rootUrl } from \"../../config\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getCompanies } from \"./companiesActions\";\r\n\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport {\r\n  Divider,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 50,\r\n    margin: \"10px 0px 10px 10px\",\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport default function ProjectComponent({\r\n  projectName = \"НацПроект\",\r\n  projectId = 1,\r\n  searchText = \"\",\r\n  isSearching = false,\r\n  userCount = 0,\r\n  allUsers = [],\r\n  currentUsers = [],\r\n}) {\r\n  const [focused, setFocused] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState(-1);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n  const backgroundColor =\r\n    projectName &&\r\n    isSearching &&\r\n    projectName.toLowerCase().includes(searchText.toLowerCase())\r\n      ? \"wheat\"\r\n      : \"white\";\r\n\r\n  const usersToAdd = allUsers.filter((u) =>\r\n    currentUsers.every((cu) => cu.id !== u.id)\r\n  );\r\n\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n      style={{ backgroundColor, width: '100%' }}\r\n      disabled={true}\r\n    >\r\n      <CardContent>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {projectName}\r\n          </Typography>\r\n\r\n          {userCount > 0 && (\r\n            <Badge\r\n              badgeContent={userCount}\r\n              style={{ paddingBottom: 8, marginLeft: 10 }}\r\n            >\r\n              <PersonIcon />\r\n            </Badge>\r\n          )}\r\n        </div>\r\n\r\n        <Divider />\r\n\r\n        <Button style={{ width: \"100%\" }} onClick={() => setFocused(!focused)}>\r\n          {focused ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n        </Button>\r\n\r\n        {focused && (\r\n          <>\r\n            {usersToAdd.length > 0 && (\r\n              <div style={{ display: \"flex\", margin: \"20px 0px\" }}>\r\n                <FormControl style={{ width: 200 }} variant=\"filled\">\r\n                  <InputLabel>Пользователь</InputLabel>\r\n                  <Select\r\n                    value={selectedUser}\r\n                    onChange={(e) => setSelectedUser(e.target.value)}\r\n                    style={{ height: 50 }}\r\n                  >\r\n                    {usersToAdd.map((c) => (\r\n                      <MenuItem value={c.id}>\r\n                        {c.firstName || \"\"} {c.secondName || \"\"} (\r\n                        {c.login || \"\"})\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{\r\n                    margin: \"10px 0px 10px 5px\",\r\n                    backgroundColor: \"#6ccf70\",\r\n                  }}\r\n                  disabled={!selectedUser || selectedUser === -1}\r\n                  onClick={async () => {\r\n                    const user = allUsers.find((u) => u.id === selectedUser);\r\n                    try {\r\n                      setLoading(true);\r\n                      await axios.post(\r\n                        `${rootUrl}/projects/${selectedUser}`,\r\n                        {\r\n                          project_id: projectId,\r\n                          project_name: projectName,\r\n                          user_id: selectedUser,\r\n                          user_full_name: `${user.firstName} ${user.secondName} (${user.login})`,\r\n                        },\r\n                        { withCredentials: true }\r\n                      );\r\n                      dispatch(getCompanies());\r\n                    } finally {\r\n                      setLoading(false);\r\n                    }\r\n                  }}\r\n                >\r\n                  {loading ? \"Загрузка\" : \"Добавить пользователя\"}\r\n                </Button>\r\n              </div>\r\n            )}\r\n\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Имя</TableCell>\r\n                    <TableCell>Фамилия</TableCell>\r\n                    <TableCell>Email</TableCell>\r\n                    <TableCell>Логин</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      Убрать пользователя из проекта\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {currentUsers.length === 0 && (\r\n                    <Typography variant=\"h5\" style={{ margin: 20 }}>\r\n                      Нет пользователей\r\n                    </Typography>\r\n                  )}\r\n\r\n                  {currentUsers.map((row) => (\r\n                    <TableRow key={row.login}>\r\n                      <TableCell component=\"th\">\r\n                        {row.firstName || \"-\"}\r\n                      </TableCell>\r\n                      <TableCell>{row.secondName || \"-\"}</TableCell>\r\n                      <TableCell>{row.email || \"-\"}</TableCell>\r\n                      <TableCell>{row.login || \"-\"}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button variant=\"contained\">\r\n                          <HighlightOffIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 250,\r\n    margin: \"10px 0px 10px 10px\",\r\n  },\r\n});\r\n\r\nexport default function AddProjectCard({ projectName = \"НацПроект\" }) {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        margin: \"10px 0px 10px 10px\",\r\n      }}\r\n    >\r\n      <Fab\r\n        color=\"primary\"\r\n        variant=\"extended\"\r\n        onClick={() => history.push(\"/project/add\")}\r\n      >\r\n        <AddIcon />\r\n        ДОбавить\r\n      </Fab>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport GridLoader from \"react-spinners/GridLoader\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ProjectComponent from \"./ProjectComponent\";\r\nimport AddProjectCard from \"./AddProjectCard\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport { getCompanies } from \"./companiesActions\";\r\n\r\nconst useGetCompanies = () => {\r\n  const { isDataLoaded } = useSelector((state) => state.companiesReducer);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    !isDataLoaded && dispatch(getCompanies());\r\n  }, []);\r\n};\r\n\r\nexport default function Companies() {\r\n  const { isDataLoaded, isDataLoading, companies } = useSelector(\r\n    (state) => state.companiesReducer\r\n  );\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [isSearching, setIsSearching] = useState(false);\r\n\r\n  useGetCompanies();\r\n\r\n  const [currentCompanies, setCurrentCompanies] = useState(companies);\r\n\r\n  useEffect(() => {\r\n    setCurrentCompanies(companies);\r\n  }, [companies]);\r\n\r\n  console.log(currentCompanies);\r\n\r\n  console.log(companies);\r\n\r\n  const setSearch = (_inputText) => {\r\n    const inputText = _inputText.toLowerCase();\r\n\r\n    if (_inputText === \"\") {\r\n      setIsSearching(0);\r\n      setCurrentCompanies(companies);\r\n    } else {\r\n      const newCompanies = companies.filter((comp) => {\r\n        if (comp.name.toLowerCase().includes(inputText)) return true;\r\n\r\n        if (comp.apps) {\r\n          return comp.apps.some((a) =>\r\n            a.project_name.toLowerCase().includes(inputText)\r\n          );\r\n        }\r\n\r\n        return false;\r\n      });\r\n\r\n      setCurrentCompanies(newCompanies);\r\n      setSearchText(inputText);\r\n      setIsSearching(true);\r\n    }\r\n  };\r\n\r\n  if (isDataLoading) {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"80vh\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <GridLoader loading={true} size={50} color={\"rgb(65,83,175)\"} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!isDataLoaded) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: 10 }}>\r\n      <div style={{ display: \"flex\", alignItems: \"flex-end\" }}>\r\n        <TextField\r\n          id=\"standard-search\"\r\n          label=\"Поиск компании или\"\r\n          type=\"search\"\r\n          style={{ margin: 10, width: \"300px\" }}\r\n          onReset={() => console.log(\"res\")}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <SearchIcon />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {currentCompanies.length > 0 ? (\r\n        currentCompanies.map((company, i) => {\r\n          const isCompSearched =\r\n            isSearching &&\r\n            isSearching &&\r\n            company.name.toLowerCase().includes(searchText);\r\n\r\n          return (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                width: \"100%\",\r\n                marginBottom: 20,\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h5\"\r\n                style={{\r\n                  backgroundColor: isCompSearched ? \"wheat\" : \"white\",\r\n                }}\r\n              >\r\n                {company.name}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">Проекты: </Typography>\r\n              <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                {company.apps ? (\r\n                  company.apps.map((app) => (\r\n                    <ProjectComponent\r\n                      projectName={app.project_name}\r\n                      projectId={app.id}\r\n                      userCount={app.AppUsers ? app.AppUsers.length : 0}\r\n                      searchText={searchText}\r\n                      isSearching={isSearching}\r\n                      currentUsers={app.AppUsers || []}\r\n                      allUsers={company.users || []}\r\n                    />\r\n                  ))\r\n                ) : (\r\n                  <AddProjectCard />\r\n                )}\r\n              </div>\r\n              <Divider style={{ marginTop: 20 }} />\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <Typography>Не найдено никаикх компаний или проектов</Typography>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 345,\r\n    margin: '10px 0px 10px 10px'\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport default function CompanyCard({\r\n  companyName = \"Лизард ООО\",\r\n  companyDescription = \"Описание компании Лизард ООО\",\r\n  imageUrl = \"https://images.pexels.com/photos/927497/pexels-photo-927497.jpeg?cs=srgb&dl=green-reptile-927497.jpg&fm=jpg\",\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={imageUrl}  \r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {companyName}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {companyDescription}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 250,\r\n    margin: \"10px 0px 10px 10px\",\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport default function ProjectCard({\r\n  projectName = \"НацПроект\",\r\n  companyName = \"Лизард ООО\",\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {projectName}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {companyName}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Person from \"@material-ui/icons/Person\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport GridLoader from \"react-spinners/GridLoader\";\r\n\r\nimport CompanyCard from \"./CompanyCard\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport { startLoading } from \"./profileActions\";\r\n\r\nconst useGetData = () => {\r\n  const { isDataLoaded } = useSelector((state) => state.profileReducer);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    !isDataLoaded && dispatch(startLoading());\r\n  }, []);\r\n};\r\n\r\nexport default function Profile() {\r\n  useGetData();\r\n\r\n  const classes = useStyles();\r\n\r\n  const { isDataLoaded, isDataLoading, userData, companyData } = useSelector(\r\n    (state) => state.profileReducer\r\n  );\r\n\r\n  console.log(userData);\r\n  console.log(companyData);\r\n\r\n  if (isDataLoading) {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"80vh\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <GridLoader loading={true} size={50} color={\"rgb(65,83,175)\"} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!isDataLoaded) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: 10 }}>\r\n      <div\r\n        style={{\r\n          marginTop: 10,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <Person style={{ fontSize: 160 }} />\r\n        <Typography variant=\"h5\"> Личнные данные </Typography>\r\n        <List component=\"nav\" className={classes.list}>\r\n          <ListItem>\r\n            <Typography>Логин: </Typography>\r\n            <Typography style={{ fontWeight: \"bold\", marginLeft: 5 }}>\r\n              {userData.login}\r\n            </Typography>\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem>\r\n            <Typography>email: </Typography>\r\n            <Typography style={{ fontWeight: \"bold\", marginLeft: 5 }}>\r\n              {userData.email}\r\n            </Typography>\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem>\r\n            <Typography>Имя: </Typography>\r\n            <Typography style={{ fontWeight: \"bold\", marginLeft: 5 }}>\r\n              {userData.firstName}\r\n            </Typography>\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem>\r\n            <Typography>Фамиля: </Typography>\r\n            <Typography style={{ fontWeight: \"bold\", marginLeft: 5 }}>\r\n              {userData.secondName}\r\n            </Typography>\r\n          </ListItem>\r\n          {userData.isAdmin && (\r\n            <>\r\n              <Divider />\r\n              <ListItem>\r\n                <Typography>Статус: </Typography>\r\n                <Typography style={{ fontWeight: \"bold\", marginLeft: 5 }}>\r\n                  Администартор\r\n                </Typography>\r\n              </ListItem>\r\n            </>\r\n          )}\r\n        </List>\r\n\r\n        <Typography variant=\"h5\">Компания</Typography>\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n          <CompanyCard\r\n            companyName={userData.companyName}\r\n            companyDescription={`Описание компании ${userData.companyName}`}\r\n          />\r\n        </div>\r\n\r\n        <Typography variant=\"h5\" style={{ marginTop: 30 }}>\r\n          Список Проектов\r\n        </Typography>\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n          {userData.appNames ? userData.appNames.map((appName) => (\r\n            <ProjectCard\r\n              companyName={userData.companyName}\r\n              projectName={appName}\r\n              key={appName}\r\n            />\r\n          )) : <Typography>Нет проектов</Typography>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    width: \"100%\",\r\n    maxWidth: 560,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    marginTop: 10,\r\n    marginBottom: 30,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { rootUrl } from \"../../config\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default function EditProfile() {\r\n  const classes = useStyles();\r\n\r\n  const { firstName, lastName } = useSelector((state) => state.appReducer);\r\n  const history = useHistory();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [name, setName] = useState(firstName);\r\n  const [surName, setSurName] = useState(lastName);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  const onSubmit = async () => {\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await axios.put(\r\n        `${rootUrl}/user`,\r\n        {\r\n          firstName: name,\r\n          secondName: surName,\r\n          password: password,\r\n        },\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      );\r\n      history.push(\"/profile\");\r\n    } catch (e) {\r\n      setIsError(true);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 10 }}>\r\n      <Typography variant=\"h5\">Редактирование Профиля</Typography>\r\n\r\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n        <TextField\r\n          className={classes.textField}\r\n          label=\"Имя\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          variant=\"filled\"\r\n        />\r\n        <TextField\r\n          className={classes.textField}\r\n          label=\"Фамилия\"\r\n          variant=\"filled\"\r\n          value={surName}\r\n          onChange={(e) => setSurName(e.target.value)}\r\n        />\r\n        <TextField\r\n          className={classes.textField}\r\n          label=\"Пароль\"\r\n          variant=\"filled\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      {isError && <Typography variant=\"subheader\">Ошибка</Typography>}\r\n\r\n      <div className={classes.submitButtonWrapper}>\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          disabled={\r\n            isLoading || name === \"\" || surName === \"\" || password === \"\"\r\n          }\r\n          onClick={onSubmit}\r\n        >\r\n          {!isLoading ? \"Изменить\" : <span>&nbsp;&nbsp;</span>}\r\n        </Button>\r\n        {isLoading && (\r\n          <CircularProgress\r\n            size={24}\r\n            className={classes.submitButtonProgress}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  submitButtonWrapper: {\r\n    margin: theme.spacing(1),\r\n    position: \"relative\",\r\n    width: 200,\r\n  },\r\n  submitButtonProgress: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  textField: {\r\n    width: 200,\r\n    margin: \"5px 0px\",\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GridLoader from \"react-spinners/GridLoader\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { rootUrl } from \"../../config\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { getCompanies } from \"../Companies/companiesActions\";\r\n\r\nimport axios from \"axios\";\r\nimport { Menu } from \"@material-ui/core\";\r\n\r\nconst useGetCompanies = () => {\r\n  const { isDataLoaded } = useSelector((state) => state.companiesReducer);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    !isDataLoaded && dispatch(getCompanies());\r\n  }, []);\r\n};\r\n\r\nexport default function AddUser() {\r\n  const classes = useStyles();\r\n  useGetCompanies();\r\n  const { isDataLoading, isDataLoaded, companies } = useSelector(\r\n    (state) => state.companiesReducer\r\n  );\r\n  const history = useHistory();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [surName, setSurName] = useState(\"\");\r\n  const [selectedCompany, setSelectedCompany] = useState(-1);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [login, setLogin] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isError, setIsError] = useState(false);\r\n  const [goodResponse, setGoodResponse] = useState(\"\");\r\n\r\n  const clearFields = () => {\r\n    setName(\"\");\r\n    setSurName(\"\");\r\n    setSelectedCompany(-1);\r\n    setEmail(\"\");\r\n    setLogin(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${rootUrl}/user`,\r\n        {\r\n          firstName: name,\r\n          secondName: surName,\r\n          companyID: selectedCompany,\r\n          companyName: companies.find((o) => o.id === selectedCompany).name,\r\n          email: email,\r\n          login: login,\r\n          password: password,\r\n        },\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      );\r\n      clearFields();\r\n      setGoodResponse(response.data);\r\n    } catch (e) {\r\n      setIsError(true);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  if (isDataLoading) {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"80vh\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <GridLoader loading={true} size={50} color={\"rgb(65,83,175)\"} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!isDataLoaded) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: 10 }}>\r\n      <Typography variant=\"h5\">Создать пользователя</Typography>\r\n\r\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n        <TextField\r\n          className={classes.textField}\r\n          label=\"Имя\"\r\n          variant=\"filled\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <TextField\r\n          className={classes.textField}\r\n          label=\"Фамилия\"\r\n          variant=\"filled\"\r\n          value={surName}\r\n          onChange={(e) => setSurName(e.target.value)}\r\n        />\r\n        <FormControl style={{ width: 200 }} variant=\"filled\">\r\n          <InputLabel>Компания</InputLabel>\r\n          <Select\r\n            value={selectedCompany}\r\n            onChange={(e) => setSelectedCompany(e.target.value)}\r\n          >\r\n            {companies.map((c) => (\r\n              <MenuItem value={c.id}>{c.name}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          className={classes.textField}\r\n          label=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          variant=\"filled\"\r\n        />\r\n        <TextField\r\n          className={classes.textField}\r\n          label=\"Логин\"\r\n          value={login}\r\n          onChange={(e) => setLogin(e.target.value)}\r\n          variant=\"filled\"\r\n        />\r\n        <TextField\r\n          className={classes.textField}\r\n          label=\"Пароль\"\r\n          variant=\"filled\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      {isError && <Typography variant=\"subheader\">Ошибка</Typography>}\r\n\r\n      {goodResponse !== \"\" && (\r\n        <Typography variant=\"h6\" style={{ margin: \"10px 0px\" }}>\r\n          {goodResponse}\r\n        </Typography>\r\n      )}\r\n\r\n      <div className={classes.submitButtonWrapper}>\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          disabled={\r\n            isLoading ||\r\n            name === \"\" ||\r\n            surName === \"\" ||\r\n            selectedCompany === -1 ||\r\n            email === \"\" ||\r\n            login === \"\" ||\r\n            password === \"\"\r\n          }\r\n          onClick={onSubmit}\r\n        >\r\n          {!isLoading ? \"Создать пользователя\" : <span>&nbsp;&nbsp;</span>}\r\n        </Button>\r\n        {isLoading && (\r\n          <CircularProgress\r\n            size={24}\r\n            className={classes.submitButtonProgress}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  submitButtonWrapper: {\r\n    margin: theme.spacing(1),\r\n    position: \"relative\",\r\n    width: 200,\r\n  },\r\n  submitButtonProgress: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  textField: {\r\n    width: 200,\r\n    margin: \"5px 0px\",\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GridLoader from \"react-spinners/GridLoader\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { rootUrl } from \"../../config\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { getCompanies } from \"../Companies/companiesActions\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default function AddCompany() {\r\n  const classes = useStyles();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [isError, setIsError] = useState(false);\r\n  const [goodResponse, setGoodResponse] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const clearFields = () => {\r\n    setName(\"\");\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await axios.post(\r\n        `${rootUrl}/company`,\r\n        {\r\n          name: name,\r\n        },\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      );\r\n      setGoodResponse(`Компания ${name} создана`);\r\n      dispatch(getCompanies());\r\n      clearFields();\r\n    } catch (e) {\r\n      setIsError(true);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 10 }}>\r\n      <Typography variant=\"h5\">Создать компанию</Typography>\r\n\r\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n        <TextField\r\n          className={classes.textField}\r\n          label=\"Имя Компании\"\r\n          variant=\"filled\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      {isError && <Typography variant=\"subheader\">Ошибка</Typography>}\r\n\r\n      {goodResponse !== \"\" && (\r\n        <Typography variant=\"h6\" style={{ margin: \"10px 0px\" }}>\r\n          {goodResponse}\r\n        </Typography>\r\n      )}\r\n\r\n      <div className={classes.submitButtonWrapper}>\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          disabled={isLoading || name === \"\"}\r\n          onClick={onSubmit}\r\n        >\r\n          {!isLoading ? \"Создать Компанию\" : <span>&nbsp;&nbsp;</span>}\r\n        </Button>\r\n        {isLoading && (\r\n          <CircularProgress\r\n            size={24}\r\n            className={classes.submitButtonProgress}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  submitButtonWrapper: {\r\n    margin: theme.spacing(1),\r\n    position: \"relative\",\r\n    width: 200,\r\n  },\r\n  submitButtonProgress: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  textField: {\r\n    width: 200,\r\n    margin: \"5px 0px\",\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GridLoader from \"react-spinners/GridLoader\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { rootUrl } from \"../../config\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { getCompanies } from \"../Companies/companiesActions\";\r\n\r\nimport axios from \"axios\";\r\nimport { Menu } from \"@material-ui/core\";\r\n\r\nconst useGetCompanies = () => {\r\n  const { isDataLoaded } = useSelector((state) => state.companiesReducer);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    !isDataLoaded && dispatch(getCompanies());\r\n  }, []);\r\n};\r\n\r\nexport default function AddProject() {\r\n  const classes = useStyles();\r\n  useGetCompanies();\r\n  const { isDataLoading, isDataLoaded, companies } = useSelector(\r\n    (state) => state.companiesReducer\r\n  );\r\n  const history = useHistory();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedCompany, setSelectedCompany] = useState(-1);\r\n  const [name, setName] = useState(\"\");\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [selectedTrans, setSelectedTrans] = useState(-1);\r\n  const [selectedLanguage, setSelectedLanguage] = useState(-1);\r\n\r\n  const [isError, setIsError] = useState(false);\r\n  const [goodResponse, setGoodResponse] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const clearFields = () => {\r\n    setSelectedCompany(-1);\r\n    setName(\"\");\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${rootUrl}/project`,\r\n        {\r\n          project_name: name,\r\n          company_id: selectedCompany,\r\n          is_recording: isRecording,\r\n          transcription: selectedTrans,\r\n          language: selectedLanguage,\r\n        },\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      );\r\n      clearFields();\r\n      dispatch(getCompanies());\r\n      setGoodResponse(response.data);\r\n    } catch (e) {\r\n      setIsError(true);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  if (isDataLoading) {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"80vh\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <GridLoader loading={true} size={50} color={\"rgb(65,83,175)\"} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!isDataLoaded) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: 10 }}>\r\n      <Typography variant=\"h5\">Добавить проект</Typography>\r\n\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", marginTop: 5 }}>\r\n        <FormControl style={{ width: 200 }} variant=\"filled\">\r\n          <InputLabel>Компания</InputLabel>\r\n          <Select\r\n            value={selectedCompany}\r\n            onChange={(e) => setSelectedCompany(e.target.value)}\r\n          >\r\n            {companies.map((c) => (\r\n              <MenuItem value={c.id}>{c.name}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          className={classes.textField}\r\n          label=\"Имя\"\r\n          variant=\"filled\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n\r\n        <FormControl style={{ width: 200, margin: \"5px 0px\" }} variant=\"filled\">\r\n          <InputLabel>Транскрибирование</InputLabel>\r\n          <Select\r\n            value={selectedTrans}\r\n            onChange={(e) => setSelectedTrans(e.target.value)}\r\n          >\r\n            <MenuItem value=\"N\">Нет</MenuItem>\r\n            <MenuItem value=\"Y\">Yandex</MenuItem>\r\n            <MenuItem value=\"G\">Google</MenuItem>\r\n            <MenuItem value=\"A\">ASM</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl style={{ width: 200, margin: \"5px 0px\" }} variant=\"filled\">\r\n          <InputLabel>Язык</InputLabel>\r\n          <Select\r\n            value={selectedLanguage}\r\n            onChange={(e) => setSelectedLanguage(e.target.value)}\r\n          >\r\n            <MenuItem value=\"R\">Русский</MenuItem>\r\n            <MenuItem value=\"E\">Английский</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={isRecording}\r\n              onChange={(e) => setIsRecording(!isRecording)}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Запись Разговора\"\r\n        />\r\n      </div>\r\n\r\n      {isError && <Typography variant=\"subheader\">Ошибка</Typography>}\r\n\r\n      {goodResponse !== \"\" && (\r\n        <Typography variant=\"h6\" style={{ margin: \"10px 0px\" }}>\r\n          {goodResponse}\r\n        </Typography>\r\n      )}\r\n\r\n      <div className={classes.submitButtonWrapper}>\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          disabled={\r\n            isLoading ||\r\n            name === \"\" ||\r\n            selectedCompany === -1 ||\r\n            selectedLanguage === -1 ||\r\n            selectedTrans === -1\r\n          }\r\n          onClick={onSubmit}\r\n        >\r\n          {!isLoading ? \"Добавить Проект\" : <span>&nbsp;&nbsp;</span>}\r\n        </Button>\r\n        {isLoading && (\r\n          <CircularProgress\r\n            size={24}\r\n            className={classes.submitButtonProgress}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  submitButtonWrapper: {\r\n    margin: theme.spacing(1),\r\n    position: \"relative\",\r\n    width: 200,\r\n  },\r\n  submitButtonProgress: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  textField: {\r\n    width: 200,\r\n    margin: \"5px 0px\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport TableChartIcon from \"@material-ui/icons/TableChart\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport AddCompanyIcon from \"@material-ui/icons/GroupAdd\";\r\nimport AddProjectIcon from '@material-ui/icons/PostAdd';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logoutAction } from \"../scenes/Login/loginActions\";\r\n\r\nexport default function LeftMenu() {\r\n  const history = useHistory();\r\n\r\n  const { isAdmin } = useSelector((state) => state.appReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Drawer variant=\"permanent\" style={{ top: \"auto\" }}>\r\n      <div\r\n        style={{\r\n          width: \"220px\",\r\n          marginTop: \"64px\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"flex-start\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        <List>\r\n          <ListItem\r\n            button\r\n            key={\"Таблицы\"}\r\n            onClick={() => history.push(\"/tables\")}\r\n          >\r\n            <ListItemIcon>\r\n              <TableChartIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Таблицы\"} />\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            key={\"Компании и Проекты\"}\r\n            onClick={() => history.push(\"/companieslist\")}\r\n          >\r\n            <ListItemIcon>\r\n              <BusinessIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Компании и Проекты\"} />\r\n          </ListItem>\r\n        </List>\r\n\r\n        {isAdmin && (\r\n          <>\r\n            <Divider />\r\n            <List>\r\n              <ListItem\r\n                button\r\n                key={\"Таблицы\"}\r\n                onClick={() => history.push(\"/user/add\")}\r\n              >\r\n                <ListItemIcon>\r\n                  <PersonAddIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={\"Создать пользователя\"} />\r\n              </ListItem>\r\n            </List>\r\n            <List>\r\n              <ListItem\r\n                button\r\n                key={\"Таблицы\"}\r\n                onClick={() => history.push(\"/company/add\")}\r\n              >\r\n                <ListItemIcon>\r\n                  <AddCompanyIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={\"Создать компанию\"} />\r\n              </ListItem>\r\n            </List>\r\n            <List>\r\n              <ListItem\r\n                button\r\n                key={\"Таблицы\"}\r\n                onClick={() => history.push(\"/project/add\")}\r\n              >\r\n                <ListItemIcon>\r\n                  <AddProjectIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={\"Добавить проект\"} />\r\n              </ListItem>\r\n            </List>\r\n          </>\r\n        )}\r\n\r\n        <Divider style={{ marginTop: \"auto\" }} />\r\n        <List>\r\n          <ListItem\r\n            button\r\n            key={\"Выйти\"}\r\n            onClick={() => dispatch(logoutAction())}\r\n          >\r\n            <ListItemIcon>\r\n              <ExitToAppIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Выйты\"} />\r\n          </ListItem>\r\n        </List>\r\n      </div>\r\n    </Drawer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport BeachAccess from \"@material-ui/icons/BeachAccess\";\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { logoutAction } from \"../scenes/Login/loginActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  companyLogo: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  userNameTypography: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function TopMenu() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const dispatch = useDispatch();\r\n\r\n  const { firstName, lastName, isAdmin } = useSelector(\r\n    (state) => state.appReducer\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar>\r\n        <BeachAccess className={classes.companyLogo} />\r\n        <Typography variant=\"h5\" className={classes.title}>\r\n          FORTCOM\r\n        </Typography>\r\n\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          {isAdmin && (\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              className={classes.userNameTypography}\r\n            >\r\n              Администратор\r\n            </Typography>\r\n          )}\r\n\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            className={classes.userNameTypography}\r\n          >\r\n            {firstName} {lastName}\r\n          </Typography>\r\n          <IconButton\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleMenu}\r\n            color=\"inherit\"\r\n          >\r\n            <SettingsIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={anchorEl}\r\n            open={open}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem\r\n              onClick={() => {\r\n                handleClose();\r\n                history.push(\"/profile\");\r\n              }}\r\n            >\r\n              Профиль\r\n            </MenuItem>\r\n\r\n            <Divider />\r\n\r\n            <MenuItem\r\n              onClick={() => {\r\n                handleClose();\r\n                history.push(\"/profile/edit\");\r\n              }}\r\n            >\r\n              Редактировать\r\n            </MenuItem>\r\n\r\n            <Divider />\r\n\r\n            <MenuItem onClick={() => dispatch(logoutAction())}>Выйти</MenuItem>\r\n          </Menu>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Login from \"../scenes/Login\";\r\nimport Tables from \"../scenes/Tables\";\r\nimport Companies from \"../scenes/Companies\";\r\nimport Profile from \"../scenes/Profile\";\r\nimport EditProfile from \"../scenes/EditProfile\";\r\nimport AddUser from \"../scenes/AddUser\";\r\nimport AddCompany from \"../scenes/AddCompany\";\r\nimport AddProject from \"../scenes/AddProject\";\r\nimport LeftMenu from \"../components/LeftMenu\";\r\nimport TopMenu from \"../components/TopMenu\";\r\nimport { authenticate } from \"./appActions\";\r\n\r\nconst useAuth = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(authenticate());\r\n  }, []);\r\n};\r\n\r\nexport default function App() {\r\n  const { isLoggedIn, initAuth } = useSelector((state) => state.appReducer);\r\n\r\n  useAuth();\r\n\r\n  if (!initAuth) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        {isLoggedIn && (\r\n          <>\r\n            <LeftMenu />\r\n            <TopMenu />\r\n          </>\r\n        )}\r\n        <div\r\n          style={isLoggedIn ? { marginLeft: \"220px\", marginTop: \"64px\" } : {}}\r\n        >\r\n          <Switch>\r\n            <Route exact path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            <ProtectedRoute exact path=\"/\">\r\n              <Redirect\r\n                to={{\r\n                  pathname: \"/tables\",\r\n                }}\r\n              />\r\n            </ProtectedRoute>\r\n            <ProtectedRoute exact path=\"/tables\">\r\n              <Tables />\r\n            </ProtectedRoute>\r\n            <ProtectedRoute exact path=\"/companieslist\">\r\n              <Companies />\r\n            </ProtectedRoute>\r\n            <ProtectedRoute exact path=\"/profile\">\r\n              <Profile />\r\n            </ProtectedRoute>\r\n            <ProtectedRoute exact path=\"/profile/edit\">\r\n              <EditProfile />\r\n            </ProtectedRoute>\r\n            <ProtectedRoute exact path=\"/user/add\">\r\n              <AddUser />\r\n            </ProtectedRoute>\r\n            <ProtectedRoute exact path=\"/company/add\">\r\n              <AddCompany />\r\n            </ProtectedRoute>\r\n            <ProtectedRoute exact path=\"/project/add\">\r\n              <AddProject />\r\n            </ProtectedRoute>\r\n            <ProtectedRoute path=\"*\">\r\n              <span>no such page</span>\r\n            </ProtectedRoute>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst ProtectedRoute = ({ children, ...rest }) => {\r\n  const { isLoggedIn } = useSelector((state) => state.appReducer);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isLoggedIn ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport App from \"./app/App\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}