{"version":3,"sources":["config.js","app/appActions.js","scenes/Login/loginActions.js","scenes/Login/loginReducer.js","app/appReducer.js","scenes/Tables/tablesUtil.js","scenes/Tables/tablesActions.js","scenes/Tables/tablesReducer.js","scenes/Profile/profileActions.js","scenes/Profile/profileReducer.js","scenes/Companies/companiesActions.js","scenes/Companies/companiesReducer.js","rootReducer.js","scenes/Login/index.js","scenes/Tables/JsonTable.js","scenes/Tables/index.js","scenes/Companies/ProjectComponent.js","scenes/Companies/AddProjectCard.js","scenes/Companies/index.js","scenes/Profile/CompanyCard.js","scenes/Profile/ProjectCard.js","scenes/Profile/index.js","scenes/EditProfile/index.js","scenes/AddUser/index.js","scenes/AddCompany/index.js","scenes/AddProject/index.js","components/LeftMenu.js","components/TopMenu.js","app/App.js","index.js"],"names":["rootUrl","actions","setUserData","createAction","authenticateUser","logout","initAuth","login","startLoggingIn","setLoadingError","logoutAction","dispatch","getState","a","axios","get","withCredentials","appActions","handleActions","loginActions","state","isLoadingLogging","errorWhenLogging","errorMessage","action","payload","isError","message","defaultState","isLoggedIn","firstName","lastName","isAdmin","tableNameEnum","setInitData","setLoading","initData","searchField","filterList","currentTable","projectId","loading","tablesActions","tableName","response","startLoading","setProfileData","profileActions","userData","isDataLoaded","isDataLoading","user","companyData","companies","setCompanies","getCompanies","data","companiesActions","combineReducers","appReducer","loginReducer","tablesReducer","profileReducer","companiesReducer","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submitButtonWrapper","position","submitButtonProgress","top","left","marginLeft","submit","errorText","red","SignInSide","classes","useDispatch","useSelector","history","useHistory","useEffect","push","useState","userName","setUserName","password","setpassword","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","noValidate","onSubmit","e","preventDefault","length","post","email","first_name","second_name","is_admin","loginAction","TextField","value","onChange","target","fullWidth","label","autoFocus","name","id","Button","disabled","CircularProgress","size","Box","mt","CellHeader","props","showFilter","setShowFilter","setValue","TableCell","style","styles","rowHeader","sortBy","onClick","toggleSort","cursor","title","helperText","onKeyPress","key","addFilter","TablePaginationActions","count","page","rowsPerPage","onChangePage","flexShrink","IconButton","event","aria-label","Math","ceil","max","justifyContent","JsonTable","setData","keys","setKeys","isFetched","setIsFetched","error","setError","setSortBy","search","setSearch","currentPage","setCurrentPage","setRowsPerPage","tableData","setTableData","setCount","filters","setFilters","query","URLSearchParams","useLocation","removeFilter","newFilters","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","url","method","then","req","Object","callIdFromQuerry","callid","catch","newJson","filter","values","some","toString","toLowerCase","includes","newData","map","direction","sort","b","localeCompare","undefined","numeric","sensitivity","slice","autocomplete","InputProps","startAdornment","InputAdornment","Chip","filename","lastIndexOf","borderRadius","border","fontSize","fontWeight","padding","textDecoration","TableContainer","Table","TableHead","TableRow","toUpperCase","val","handleChangeSort","TableBody","row","nextUrl","minWidth","textAlign","controls","preload","src","TableFooter","TablePagination","rowsPerPageOptions","colSpan","onChangeRowsPerPage","ActionsComponent","tableEnum","callsout","calls","vars","ars","TablesComponent","tableFromQuery","console","log","selected","setSelected","MenuButton","callsOutKeys","callsKeys","varsKeys","arsKeys","styled","contact_attempt_fact_key","contact_info","dialing_mode","campaing","call_result","record_type","record_status","calling_list","contact_info_type","start_time","end_time","record_id","chain_id","chain_n","attempt","daily_from","daily_till","dial_sched_time","project_id","customer_data","interaction_id","source_address","target_address","interaction_type","menu_name","ani","seq","action_status","action_description","enter_menu_time","leave_menu_time","action_time","utterance","interpretation","confidence","inputmode","waverecord","media","ProjectComponent","projectName","searchText","isSearching","userCount","allUsers","currentUsers","focused","setFocused","selectedUser","setSelectedUser","usersToAdd","u","every","cu","Card","CardContent","gutterBottom","Badge","badgeContent","paddingBottom","Divider","FormControl","InputLabel","Select","c","MenuItem","secondName","find","project_name","user_id","user_full_name","AddProjectCard","Fab","Companies","setSearchText","setIsSearching","useGetCompanies","currentCompanies","setCurrentCompanies","onReset","_inputText","inputText","newCompanies","comp","apps","company","i","isCompSearched","marginBottom","flexWrap","app","AppUsers","users","CompanyCard","companyName","companyDescription","imageUrl","CardActionArea","CardMedia","ProjectCard","useGetData","Profile","List","list","ListItem","appNames","appName","maxWidth","background","divider","nested","paddingLeft","EditProfile","isLoading","setIsLoading","setName","surName","setSurName","setPassword","setIsError","put","textField","AddUser","selectedCompany","setSelectedCompany","setEmail","setLogin","goodResponse","setGoodResponse","companyID","o","AddCompany","AddProject","company_id","LeftMenu","Drawer","button","ListItemIcon","ListItemText","primary","appBar","zIndex","drawer","companyLogo","marginRight","userNameTypography","flexGrow","TopMenu","React","anchorEl","setAnchorEl","open","Boolean","handleClose","AppBar","Toolbar","aria-controls","aria-haspopup","currentTarget","Menu","onClose","useAuth","authResponse","status","App","exact","path","to","pathname","ProtectedRoute","children","rest","render","location","store","createStore","rootReducer","applyMiddleware","thunk","document","getElementById"],"mappings":"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","file":"static/js/main.89947dfb.chunk.js","sourcesContent":["export const rootUrl = \"http://127.0.0.1:8899\";\n","import { createAction } from \"redux-actions\";\nimport axios from \"axios\";\n\nimport { rootUrl } from \"../config\";\n\nconst actions = {\n  setUserData: createAction(\"LOGIN\"),\n  authenticateUser: createAction(\"AUTHENTICATE_USER\"),\n  logout: createAction(\"USER_LOGOUT\"),\n  initAuth: createAction(\"INIT_AUTH\"),\n};\n\nexport function authenticate() {\n  return async (dispatch, getState) => {\n    try {\n      const authResponse = await axios.get(`${rootUrl}/auth`, {\n        withCredentials: true,\n      });\n\n      if (authResponse.status === 200) {\n        const { data } = authResponse;\n        dispatch(\n          actions.setUserData({\n            firstName: data.first_name,\n            lastName: data.second_name,\n            isAdmin: data.is_admin,\n          })\n        );\n      }\n    } catch (e) {\n    } finally {\n      dispatch(actions.initAuth());\n    }\n  };\n}\n\nexport default actions;\n","import { createAction } from \"redux-actions\";\nimport axios from \"axios\";\nimport appActions from \"../../app/appActions\";\n\nimport { rootUrl } from \"../../config\";\n\nconst actions = {\n  login: createAction(\"LOGIN\"),\n  startLoggingIn: createAction(\"CHANGE LOADING STATE\"),\n  setLoadingError: createAction(\"SET LOADING ERROR\"),\n};\n\nexport function loginAction(userName, password) {\n  return async (dispatch, getState) => {\n    if (userName.length > 0 && password.length > 0) {\n      dispatch(actions.startLoggingIn());\n      try {\n        const { data } = await axios.post(\n          `${rootUrl}/login`,\n          {\n            email: userName,\n            password,\n          },\n          { withCredentials: true }\n        );\n\n        await dispatch(\n          appActions.setUserData({\n            firstName: data.first_name,\n            lastName: data.second_name,\n            isAdmin: data.is_admin,\n          })\n        );\n      } catch (e) {\n        dispatch(\n          actions.setLoadingError({\n            isError: true,\n            message: \"Username is not correct\",\n          })\n        );\n      }\n    } else {\n      dispatch(\n        actions.setLoadingError({\n          isError: true,\n          message: \"Username and Password should be not empty\",\n        })\n      );\n    }\n  };\n}\n\nexport function logoutAction() {\n  return async (dispatch, getState) => {\n    try {\n      const response = await axios.get(`${rootUrl}/logout`, {\n        withCredentials: true,\n      });\n    } catch {}\n    dispatch(appActions.logout());\n  };\n}\n\nexport default actions;\n","import { handleActions } from \"redux-actions\";\nimport loginActions from \"./loginActions\";\n\nconst defaultState = {\n  isLoadingLogging: false,\n  errorWhenLogging: false,\n  errorMessage: \"\",\n};\n\nexport default handleActions(\n  {\n    [loginActions.startLoggingIn]: (state) => {\n      return {\n        ...state,\n        isLoadingLogging: true,\n        errorWhenLogging: false,\n        errorMessage: \"\",\n      };\n    },\n\n    [loginActions.setLoadingError]: (state, action) => {\n      const { isError, message } = action.payload;\n      return {\n        ...state,\n        isLoadingLogging: false,\n        errorWhenLogging: isError,\n        errorMessage: message || \"\",\n      };\n    },\n  },\n  defaultState\n);\n","import { handleActions } from \"redux-actions\";\nimport appActions from \"./appActions\";\n\nconst defaultState = {\n  isLoggedIn: false,\n  firstName: \"\",\n  lastName: \"\",\n  isAdmin: false,\n  initAuth: false,\n};\n\nexport default handleActions(\n  {\n    [appActions.initAuth]: (state) => {\n      return {\n        ...state,\n        initAuth: true,\n      };\n    },\n    [appActions.logout]: () => {\n      return {\n        ...defaultState,\n        initAuth: true,\n      };\n    },\n    [appActions.setUserData]: (state, action) => {\n      return {\n        ...state,\n        ...action.payload,\n        isLoggedIn: true,\n      };\n    },\n  },\n  defaultState\n);\n","export const tableNameEnum = {\n  calls: \"calls\",\n  callsout: \"callsout\",\n  vars: \"vars\",\n  ars: \"ars\",\n};\n","import { createAction } from \"redux-actions\";\nimport axios from \"axios\";\nimport { rootUrl } from \"../../config\";\n\nimport { tableNameEnum } from \"./tablesUtil\";\n\nconst actions = {\n  setInitData: createAction(\"Set_init_Data\"),\n  setLoading: createAction(\"setLoading\"),\n};\n\nexport function fetchInitData(tableName) {\n  return async (dispatch, getState) => {\n    dispatch(actions.setLoading(true));\n\n    const response = await axios.get(`${rootUrl}/${tableName}`, {\n      withCredentials: true,\n    });\n\n    dispatch(actions.setInitData({tableName, response: response || []}))\n  };\n}\n\nexport default actions;\n","import { handleActions } from \"redux-actions\";\nimport tablesActions from \"./tablesActions\";\nimport { tableNameEnum } from \"./tablesUtil\";\n\nconst defaultState = {\n  initData: {},\n  searchField: \"\",\n  filterList: [],\n  currentTable: tableNameEnum.calls,\n  projectId: \"\",\n  loading: true,\n};\n\nexport default handleActions(\n  {\n    [tablesActions.setLoading]: (state, action) => {\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    },\n\n    [tablesActions.setInitData]: (state, action) => {\n      const { tableName, response } = action.payload;\n      return {\n        ...state,\n        loading: false,\n        initData: {\n          ...state.initData,\n          [tableName]: response,\n        },\n      };\n    },\n  },\n  defaultState\n);\n","import { createAction } from \"redux-actions\";\nimport axios from \"axios\";\nimport appActions from \"../../app/appActions\";\n\nimport { rootUrl } from \"../../config\";\n\nconst actions = {\n  startLoading: createAction(\"START_LOADING_PROFILE\"),\n  setProfileData: createAction(\"SET_PROFILE_DATA\"),\n};\n\nexport function startLoading(userName, password) {\n  return async (dispatch, getState) => {\n    dispatch(actions.startLoading());\n\n    const response = await axios.get(`${rootUrl}/user`, {\n      withCredentials: true,\n    });\n\n    dispatch(actions.setProfileData(response.data));\n  };\n}\n\nexport default actions;\n","import { handleActions } from \"redux-actions\";\nimport profileActions from \"./profileActions\";\n\nconst defaultState = {\n  isDataLoaded: false,\n  isDataLoading: false,\n  isError: false,\n  userData: {},\n  companyData: {},\n};\n\nexport default handleActions(\n  {\n    [profileActions.startLoading]: (state) => {\n      return {\n        ...state,\n        userData: {},\n        isDataLoaded: false,\n        isDataLoading: true,\n      };\n    },\n\n    [profileActions.setProfileData]: (state, action) => {\n      return {\n        ...state,\n        userData: action.payload.user,\n        companyData: action.payload.companies,\n        isError: false,\n        isDataLoaded: true,\n        isDataLoading: false,\n      };\n    },\n  },\n  defaultState\n);\n","import { createAction } from \"redux-actions\";\nimport axios from \"axios\";\n\nimport { rootUrl } from \"../../config\";\n\nconst actions = {\n  setCompanies: createAction(\"SET_COMPANIES\"),\n  setLoading: createAction(\"SET_COMPANIES_LOADING\"),\n};\n\nexport function getCompanies() {\n  return async (dispatch, getState) => {\n    dispatch(actions.setLoading(true));\n\n    const response = await axios.get(`${rootUrl}/companies`, {\n      withCredentials: true,\n    });\n\n    dispatch(actions.setCompanies(response.data.companies));\n  };\n}\n\nexport default actions;\n","import { handleActions } from \"redux-actions\";\nimport companiesActions from \"./companiesActions\";\n\nconst defaultState = {\n  companies: [],\n  isDataLoaded: false,\n  isDataLoading: false,\n};\n\nexport default handleActions(\n  {\n    [companiesActions.setCompanies]: (state, action) => {\n      return {\n        ...state,\n        companies: action.payload,\n        isDataLoaded: true,\n        isDataLoading: false,\n      };\n    },\n\n    [companiesActions.setLoading]: (state, action) => {\n      return {\n        ...state,\n        isDataLoading: action.payload,\n      };\n    },\n  },\n  defaultState\n);\n","import { combineReducers } from \"redux\";\nimport loginReducer from \"./scenes/Login/loginReducer\";\nimport appReducer from \"./app/appReducer\";\nimport tablesReducer from \"./scenes/Tables/tablesReducer\";\nimport profileReducer from \"./scenes/Profile/profileReducer\";\nimport companiesReducer from \"./scenes/Companies/companiesReducer\";\n\nexport default combineReducers({\n  appReducer,\n  loginReducer,\n  tablesReducer,\n  profileReducer,\n  companiesReducer\n});\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loginAction } from \"./loginActions\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { red } from \"@material-ui/core/colors\";\n\nimport { useHistory } from \"react-router-dom\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        ForteCom\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage:\n      \"url(https://cutewallpaper.org/21/wallpapers-with-numbers/Mathematics-HD-Desktop-Wallpapers-PixelsTalk.Net.jpg)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submitButtonWrapper: {\n    margin: theme.spacing(1),\n    position: \"relative\",\n  },\n  submitButtonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -8,\n    marginLeft: -12,\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  errorText: {\n    color: red[500],\n  },\n}));\n\nexport default function SignInSide() {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const { isLoadingLogging, errorWhenLogging, errorMessage } = useSelector(\n    (state) => state.loginReducer\n  );\n\n  const { isLoggedIn } = useSelector((state) => state.appReducer);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      history.push(\"/\");\n    }\n  }, [isLoggedIn]);\n\n  const [userName, setUserName] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    dispatch(loginAction(userName, password));\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} noValidate onSubmit={onSubmit}>\n            <TextField\n              value={userName}\n              onChange={(e) => setUserName(e.target.value)}\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              label=\"User Name\"\n              autoFocus\n            />\n            <TextField\n              value={password}\n              onChange={(e) => setpassword(e.target.value)}\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n            />\n\n            {errorWhenLogging && (\n              <Grid container>\n                <Grid item xs>\n                  <Typography\n                    component=\"h1\"\n                    variant=\"h5\"\n                    className={classes.errorText}\n                  >\n                    {errorMessage}\n                  </Typography>\n                </Grid>\n              </Grid>\n            )}\n\n            <div className={classes.submitButtonWrapper}>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                disabled={isLoadingLogging}\n              >\n                {!isLoadingLogging ? \"Sign in\" : <span>&nbsp;&nbsp;</span>}\n              </Button>\n              {isLoadingLogging && (\n                <CircularProgress\n                  size={24}\n                  className={classes.submitButtonProgress}\n                />\n              )}\n            </div>\n\n            {/* <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid> */}\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport Chip from \"@material-ui/core/Chip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\n\nimport CsvDownload from \"react-json-to-csv\";\n\nimport UpDownIcon from \"@material-ui/icons/ImportExport\";\nimport UpIcon from \"@material-ui/icons/ArrowUpward\";\nimport DownIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport GridLoader from \"react-spinners/GridLoader\";\nimport axios from \"axios\";\nimport { Typography } from \"@material-ui/core\";\n\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nimport { rootUrl } from \"../../config\";\n\nfunction CellHeader(props) {\n  const [showFilter, setShowFilter] = useState(false);\n  const [value, setValue] = useState(\"\");\n\n  const width = props.width || 200;\n\n  return (\n    <TableCell>\n      <div style={{ width }}>\n        <div style={styles.rowHeader}>\n          {props.sortBy === \"up\" && (\n            <UpIcon\n              onClick={() => props.toggleSort()}\n              style={{ cursor: \"pointer\" }}\n            />\n          )}\n\n          {props.sortBy === \"down\" && (\n            <DownIcon\n              onClick={() => props.toggleSort()}\n              style={{ cursor: \"pointer\" }}\n            />\n          )}\n\n          {!props.sortBy && (\n            <UpDownIcon\n              onClick={() => props.toggleSort()}\n              style={{ cursor: \"pointer\" }}\n            />\n          )}\n          <span style={{ width: \"100%\" }}>{props.title}</span>\n          <FilterList\n            onClick={() => setShowFilter(!showFilter)}\n            style={{ cursor: \"pointer\" }}\n          />\n        </div>\n        {showFilter && (\n          <TextField\n            helperText=\"Filter\"\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n            onKeyPress={(e) => e.key === \"Enter\" && props.addFilter(value)}\n          />\n        )}\n      </div>\n    </TableCell>\n  );\n}\n\nfunction TablePaginationActions(props) {\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div style={{ flexShrink: 0, marginLeft: 10 }}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        <FirstPageIcon />\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        <KeyboardArrowLeft />\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        <KeyboardArrowRight />\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        <LastPageIcon />\n      </IconButton>\n    </div>\n  );\n}\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction JsonTable(props) {\n  const [initData, setInitData] = useState([]);\n  const [data, setData] = useState([]);\n  const [keys, setKeys] = useState([]);\n  const [isFetched, setIsFetched] = useState(false);\n  const [error, setError] = useState(false);\n  const [sortBy, setSortBy] = useState({});\n  const [search, setSearch] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n  const [tableData, setTableData] = useState([]);\n  const [count, setCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  const [filters, setFilters] = useState({});\n\n  const query = useQuery();\n  const history = useHistory();\n\n  const addFilter = (key, value) => {\n    if (value === \"\") {\n      return removeFilter(key);\n    }\n    const newFilters = { ...filters };\n    newFilters[key] = value;\n    setFilters(newFilters);\n  };\n\n  const removeFilter = (key) => {\n    const newFilters = { ...filters };\n    delete newFilters[key];\n    setFilters(newFilters);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setCurrentPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setCurrentPage(0);\n  };\n\n  const handleChangeSort = (key) => {\n    if (sortBy.key !== key) {\n      setSortBy({\n        key,\n        direction: \"up\",\n      });\n    } else {\n      if (sortBy.direction === \"up\") {\n        setSortBy({\n          key,\n          direction: \"down\",\n        });\n      } else {\n        setSortBy({});\n      }\n    }\n  };\n\n  useEffect(() => {\n    axios\n      .get(props.url, {\n        method: \"get\",\n        withCredentials: true,\n      })\n      .then((req) => {\n        if (req.data) {\n          if (req.data.length > 0) {\n            setKeys(Object.keys(props.keys));\n            setData(req.data);\n            setInitData(req.data);\n            setCount(req.data.length);\n          }\n        } else {\n          setError(true);\n        }\n\n        setIsFetched(true);\n\n        const callIdFromQuerry = query.get(\"callid\");\n\n        if (callIdFromQuerry) {\n          setFilters({ callid: callIdFromQuerry });\n        }\n      })\n      .catch((e) => {\n        setError(true);\n        setIsFetched(true);\n      });\n  }, []);\n\n  useEffect(() => {\n    setLoading(true);\n    let newJson = [...initData];\n\n    if (search !== \"\") {\n      newJson = initData.filter((data) =>\n        Object.values(data).some((e) => {\n          if (!e) return false;\n          return e.toString().toLowerCase().includes(search.toLowerCase());\n        })\n      );\n    }\n\n    let newData = [...newJson];\n\n    Object.keys(filters).map((key) => {\n      newData = newData.filter((data) => data[key].toString() === filters[key]);\n    });\n\n    if (sortBy.key) {\n      if (sortBy.direction === \"up\") {\n        newData = newData.sort((a, b) =>\n          (\"\" + a[sortBy.key]).localeCompare(\"\" + b[sortBy.key], undefined, {\n            numeric: true,\n            sensitivity: \"base\",\n          })\n        );\n      } else {\n        newData = newData.sort((a, b) =>\n          (\"\" + b[sortBy.key]).localeCompare(\"\" + a[sortBy.key], undefined, {\n            numeric: true,\n            sensitivity: \"base\",\n          })\n        );\n      }\n    }\n\n    setData(newData);\n    setCount(newData.length);\n    setLoading(false);\n  }, [filters, search, sortBy]);\n\n  useEffect(() => {\n    setTableData(\n      data.slice(\n        currentPage * rowsPerPage,\n        currentPage * rowsPerPage + rowsPerPage\n      )\n    );\n  }, [currentPage, rowsPerPage, data]);\n\n  const renderContent = () => {\n    if (!isFetched || loading) {\n      return (\n        <div\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <GridLoader loading={true} />\n        </div>\n      );\n    }\n\n    if (isFetched && error) {\n      return <span>Error</span>;\n    }\n\n    return (\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {keys.map((key) => (\n                <CellHeader\n                  title={props.keys[key].name.toUpperCase()}\n                  addFilter={(val) => addFilter(key, val)}\n                  toggleSort={() => handleChangeSort(key)}\n                  sortBy={sortBy.key === key ? sortBy.direction : null}\n                />\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tableData.map((row) => (\n              <TableRow key={row.id}>\n                {keys.map((key) => (\n                  <TableCell\n                    onClick={() =>\n                      key === \"callid\" &&\n                      props.nextUrl &&\n                      history.push(\n                        `tables/?table=${props.nextUrl}&callid=${row[key]}`\n                      )\n                    }\n                    style={{\n                      cursor:\n                        key === \"callid\" && props.nextUrl ? \"pointer\" : \"auto\",\n                    }}\n                  >\n                    {key === \"waverecord\" ? (\n                      <div\n                        style={{\n                          minWidth: 300,\n                          width: \"100%\",\n                          textAlign: \"center\",\n                        }}\n                      >\n                        <audio controls preload=\"none\">\n                          <source\n                            src={`${rootUrl}/waverecord/${row.id}`}\n                            type=\"audio/wav\"\n                          />\n                        </audio>\n                      </div>\n                    ) : (\n                      row[key]\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 25, 100, 200]}\n                colSpan={3}\n                count={count}\n                rowsPerPage={rowsPerPage}\n                page={currentPage}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <TextField\n        id=\"standard-search\"\n        label=\"Search field\"\n        type=\"search\"\n        style={{ width: \"200px\", margin: \"10px 0px 0px 10px\" }}\n        autocomplete=\"off\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          ),\n        }}\n        onKeyPress={(e) => e.key === \"Enter\" && setSearch(e.target.value)}\n      />\n\n      <div style={{ margin: \"10px 0px 0px 10px\", display: \"flex\" }}>\n        {Object.keys(filters).map((key) => (\n          <Chip label={`${key}: ${filters[key]}`} style={{ margin: 5 }} />\n        ))}\n      </div>\n\n      <Typography style={{ margin: \"10px 0px 0px 10px\" }}>\n        {sortBy.key ? (\n          `Sort by ${sortBy.key} : ${\n            sortBy.direction === \"up\" ? \"desc\" : \"asc\"\n          }`\n        ) : (\n          <span>&nbsp;&nbsp;</span>\n        )}\n      </Typography>\n\n      <CsvDownload\n        data={tableData}\n        filename={`${props.url.slice(props.url.lastIndexOf(\"/\") + 1)}.csv`}\n        style={{\n          borderRadius: \"6px\",\n          border: \"1px solid black\",\n          fontSize: \"15px\",\n          fontWeight: \"bold\",\n          padding: \"6px 14px\",\n          textDecoration: \"none\",\n          cursor: \"pointer\",\n          width: \"150px\",\n          margin: 10,\n        }}\n      >\n        Export to CSV\n      </CsvDownload>\n\n      {renderContent()}\n    </div>\n  );\n}\n\nconst styles = {\n  rowHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n};\n\nexport default JsonTable;\n","import React, { useState, useEffect } from \"react\";\nimport JsonTable from \"./JsonTable\";\nimport Button from \"@material-ui/core/Button\";\nimport styled from \"styled-components\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchInitData } from \"./tablesActions\";\nimport { rootUrl } from \"../../config\";\nimport { tableNameEnum } from \"./tablesUtil\";\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nimport \"typeface-roboto\";\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst tableEnum = {\n  callsout: 1,\n  calls: 2,\n  vars: 3,\n  ars: 4,\n};\n\nexport default function TablesComponent() {\n  const query = useQuery();\n\n  const tableFromQuery = tableEnum[query.get(\"table\")];\n\n  console.log(tableFromQuery);\n\n  const [selected, setSelected] = useState(tableFromQuery || 2);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    setSelected(tableFromQuery || 1);\n  }, [tableFromQuery]);\n\n  return (\n    <div style={{ padding: 10 }}>\n      <Typography variant=\"h6\">ОТЧЕТЫ</Typography>\n      <div style={{ display: \"flex\", marginTop: 10 }}>\n        <MenuButton\n          variant=\"contained\"\n          onClick={() => {\n            history.push(\"/tables?table=callsout\");\n          }}\n          color={selected === 1 ? \"primary\" : \"auto\"}\n        >\n          Исходящие звонки\n        </MenuButton>\n        <MenuButton\n          variant=\"contained\"\n          onClick={() => {\n            history.push(\"/tables?table=calls\");\n          }}\n          color={selected === 2 ? \"primary\" : \"auto\"}\n        >\n          Все звонки\n        </MenuButton>\n\n        <MenuButton\n          variant=\"contained\"\n          onClick={() => {\n            history.push(\"/tables?table=vars\");\n          }}\n          color={selected === 3 ? \"primary\" : \"auto\"}\n        >\n          Голосовые сценарии\n        </MenuButton>\n        <MenuButton\n          variant=\"contained\"\n          onClick={() => {\n            history.push(\"/tables?table=ars\");\n          }}\n          color={selected === 4 ? \"primary\" : \"auto\"}\n        >\n          Распознование диалога\n        </MenuButton>\n      </div>\n\n      {selected === 1 && (\n        <JsonTable\n          url={`${rootUrl}/callsout`}\n          tableName={tableNameEnum.callsout}\n          nextUrl={`calls`}\n          keys={callsOutKeys}\n        />\n      )}\n      {selected === 2 && (\n        <JsonTable\n          url={`${rootUrl}/calls`}\n          tableName={tableNameEnum.calls}\n          nextUrl={`vars`}\n          keys={callsKeys}\n        />\n      )}\n      {selected === 3 && (\n        <JsonTable\n          url={`${rootUrl}/vars`}\n          tableName={tableNameEnum.ars}\n          nextUrl={`ars`}\n          keys={varsKeys}\n        />\n      )}\n\n      {selected === 4 && (\n        <JsonTable\n          url={`${rootUrl}/ars`}\n          tableName={tableNameEnum.vars}\n          keys={arsKeys}\n        />\n      )}\n    </div>\n  );\n}\n\nconst MenuButton = styled(Button)`\n  && {\n    margin-right: 10px;\n  }\n`;\n\nconst callsOutKeys = {\n  contact_attempt_fact_key: { name: \"идентифискатор\" },\n  contact_info: { name: \"номер контакта\" },\n  dialing_mode: { name: \"режим звонка\" },\n  campaing: { name: \"название компании\" },\n  call_result: { name: \"результат звонка\" },\n  record_type: { name: \"тип записи\" },\n  record_status: { name: \"статус записи\" },\n  calling_list: { name: \"лист обзовна\" },\n  contact_info_type: { name: \"тип контакта\t\" },\n  callid: { name: \"callid\" },\n  start_time: { name: \"начало звонка\t\" },\n  end_time: { name: \"онец звонка\" },\n  record_id: { name: \"id записи\" },\n  chain_id: { name: \"идентификатор цепочки\" },\n  chain_n: { name: \"номер в цепочки\" },\n  attempt: { name: \"колво попыток\" },\n  daily_from: { name: \"звонок с\" },\n  daily_till: { name: \"звонок по \" },\n  dial_sched_time: { name: \"время перезвона\" },\n  project_id: { name: \"прокт\" },\n  customer_data: { name: \"пользовательские данные\" },\n};\n\nconst callsKeys = {\n  interaction_id: { name: \"идентификатор\" },\n  source_address: { name: \"АОН\" },\n  target_address: { name: \"Номер сервиса\" },\n  interaction_type: { name: \"Типа звонка\" },\n  start_time: { name: \"Начало звонка\" },\n  end_time: { name: \"Конец звонка\" },\n  project_id: { name: \"проект\" },\n  customer_data: { name: \"пользовательские данные\" },\n  callid: { name: \"callid\" },\n};\n\nconst varsKeys = {\n  project_id: { name: \"проект\" },\n  menu_name: { name: \"пункт меню\" },\n  ani: { name: \"АОН\" },\n  callid: { name: \"CALLID\" },\n  seq: { name: \"последовательность\" },\n  action_status: { name: \"действие\" },\n  action_description: { name: \"описание действия\" },\n  enter_menu_time: { name: \"вермя входа в меню\" },\n  leave_menu_time: { name: \"время выхода из меню\" },\n  action_time: { name: \"время действия\" },\n};\n\nconst arsKeys = {\n  project_id: { name: \"проект\" },\n  menu_name: { name: \"пункт меню\" },\n  ani: { name: \"АОН\" },\n  callid: { name: \"CALLID\" },\n  seq: { name: \"последовательность\" },\n  utterance: { name: \"произнесенная фраза\" },\n  interpretation: { name: \"интерпретация\" },\n  confidence: { name: \"точность\" },\n  inputmode: { name: \"режим ввода\" },\n  waverecord: { name: \"прослушать фразу\" },\n};\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Badge from \"@material-ui/core/Badge\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\n\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport axios from \"axios\";\nimport { rootUrl } from \"../../config\";\nimport { useDispatch } from \"react-redux\";\nimport { getCompanies } from \"./companiesActions\";\n\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport {\n  Divider,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 200,\n    margin: \"10px 0px 10px 10px\",\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport default function ProjectComponent({\n  projectName = \"НацПроект\",\n  projectId = 1,\n  searchText = \"\",\n  isSearching = false,\n  userCount = 0,\n  allUsers = [],\n  currentUsers = [],\n}) {\n  const [focused, setFocused] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(-1);\n\n  const [loading, setLoading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n  const backgroundColor =\n    projectName &&\n    isSearching &&\n    projectName.toLowerCase().includes(searchText.toLowerCase())\n      ? \"wheat\"\n      : \"white\";\n\n  const usersToAdd = allUsers.filter((u) =>\n    currentUsers.every((cu) => cu.id !== u.id)\n  );\n\n  return (\n    <Card\n      className={classes.root}\n      style={{ backgroundColor, width: '100%' }}\n      disabled={true}\n    >\n      <CardContent>\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {projectName}\n          </Typography>\n\n          {userCount > 0 && (\n            <Badge\n              badgeContent={userCount}\n              style={{ paddingBottom: 8, marginLeft: 10 }}\n            >\n              <PersonIcon />\n            </Badge>\n          )}\n        </div>\n\n        <Divider />\n\n        <Button style={{ width: \"100%\" }} onClick={() => setFocused(!focused)}>\n          {focused ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n        </Button>\n\n        {focused && (\n          <>\n            {usersToAdd.length > 0 && (\n              <div style={{ display: \"flex\", margin: \"20px 0px\" }}>\n                <FormControl style={{ width: 200 }} variant=\"filled\">\n                  <InputLabel>Пользователь</InputLabel>\n                  <Select\n                    value={selectedUser}\n                    onChange={(e) => setSelectedUser(e.target.value)}\n                    style={{ height: 50 }}\n                  >\n                    {usersToAdd.map((c) => (\n                      <MenuItem value={c.id}>\n                        {c.firstName || \"\"} {c.secondName || \"\"} (\n                        {c.login || \"\"})\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n\n                <Button\n                  variant=\"contained\"\n                  style={{\n                    margin: \"10px 0px 10px 5px\",\n                    backgroundColor: \"#6ccf70\",\n                  }}\n                  disabled={!selectedUser || selectedUser === -1}\n                  onClick={async () => {\n                    const user = allUsers.find((u) => u.id === selectedUser);\n                    try {\n                      setLoading(true);\n                      await axios.post(\n                        `${rootUrl}/projects/${selectedUser}`,\n                        {\n                          project_id: projectId,\n                          project_name: projectName,\n                          user_id: selectedUser,\n                          user_full_name: `${user.firstName} ${user.secondName} (${user.login})`,\n                        },\n                        { withCredentials: true }\n                      );\n                      dispatch(getCompanies());\n                    } finally {\n                      setLoading(false);\n                    }\n                  }}\n                >\n                  {loading ? \"Загрузка\" : \"Добавить пользователя\"}\n                </Button>\n              </div>\n            )}\n\n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Имя</TableCell>\n                    <TableCell>Фамилия</TableCell>\n                    <TableCell>Email</TableCell>\n                    <TableCell>Логин</TableCell>\n                    <TableCell align=\"right\">\n                      Убрать пользователя из проекта\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {currentUsers.length === 0 && (\n                    <Typography variant=\"h5\" style={{ margin: 20 }}>\n                      Нет пользователей\n                    </Typography>\n                  )}\n\n                  {currentUsers.map((row) => (\n                    <TableRow key={row.login}>\n                      <TableCell component=\"th\">\n                        {row.firstName || \"-\"}\n                      </TableCell>\n                      <TableCell>{row.secondName || \"-\"}</TableCell>\n                      <TableCell>{row.email || \"-\"}</TableCell>\n                      <TableCell>{row.login || \"-\"}</TableCell>\n                      <TableCell align=\"right\">\n                        <Button variant=\"contained\">\n                          <HighlightOffIcon />\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250,\n    margin: \"10px 0px 10px 10px\",\n  },\n});\n\nexport default function AddProjectCard({ projectName = \"НацПроект\" }) {\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        margin: \"10px 0px 10px 10px\",\n      }}\n    >\n      <Fab\n        color=\"primary\"\n        variant=\"extended\"\n        onClick={() => history.push(\"/project/add\")}\n      >\n        <AddIcon />\n        ДОбавить\n      </Fab>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport GridLoader from \"react-spinners/GridLoader\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ProjectComponent from \"./ProjectComponent\";\nimport AddProjectCard from \"./AddProjectCard\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport { getCompanies } from \"./companiesActions\";\n\nconst useGetCompanies = () => {\n  const { isDataLoaded } = useSelector((state) => state.companiesReducer);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    !isDataLoaded && dispatch(getCompanies());\n  }, []);\n};\n\nexport default function Companies() {\n  const { isDataLoaded, isDataLoading, companies } = useSelector(\n    (state) => state.companiesReducer\n  );\n\n  const [searchText, setSearchText] = useState(\"\");\n  const [isSearching, setIsSearching] = useState(false);\n\n  useGetCompanies();\n\n  const [currentCompanies, setCurrentCompanies] = useState(companies);\n\n  useEffect(() => {\n    setCurrentCompanies(companies);\n  }, [companies]);\n\n  console.log(currentCompanies);\n\n  console.log(companies);\n\n  const setSearch = (_inputText) => {\n    const inputText = _inputText.toLowerCase();\n\n    if (_inputText === \"\") {\n      setIsSearching(0);\n      setCurrentCompanies(companies);\n    } else {\n      const newCompanies = companies.filter((comp) => {\n        if (comp.name.toLowerCase().includes(inputText)) return true;\n\n        if (comp.apps) {\n          return comp.apps.some((a) =>\n            a.project_name.toLowerCase().includes(inputText)\n          );\n        }\n\n        return false;\n      });\n\n      setCurrentCompanies(newCompanies);\n      setSearchText(inputText);\n      setIsSearching(true);\n    }\n  };\n\n  if (isDataLoading) {\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: \"80vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <GridLoader loading={true} size={50} color={\"rgb(65,83,175)\"} />\n      </div>\n    );\n  }\n\n  if (!isDataLoaded) {\n    return null;\n  }\n\n  return (\n    <div style={{ padding: 10 }}>\n      <div style={{ display: \"flex\", alignItems: \"flex-end\" }}>\n        <TextField\n          id=\"standard-search\"\n          label=\"Поиск компании или\"\n          type=\"search\"\n          style={{ margin: 10, width: \"300px\" }}\n          onReset={() => console.log(\"res\")}\n          onChange={(e) => setSearch(e.target.value)}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n      </div>\n\n      {currentCompanies.length > 0 ? (\n        currentCompanies.map((company, i) => {\n          const isCompSearched =\n            isSearching &&\n            isSearching &&\n            company.name.toLowerCase().includes(searchText);\n\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                width: \"100%\",\n                marginBottom: 20,\n              }}\n            >\n              <Typography\n                variant=\"h5\"\n                style={{\n                  backgroundColor: isCompSearched ? \"wheat\" : \"white\",\n                }}\n              >\n                {company.name}\n              </Typography>\n              <Typography variant=\"subtitle1\">Проекты: </Typography>\n              <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n                {company.apps ? (\n                  company.apps.map((app) => (\n                    <ProjectComponent\n                      projectName={app.project_name}\n                      projectId={app.id}\n                      userCount={app.AppUsers ? app.AppUsers.length : 0}\n                      searchText={searchText}\n                      isSearching={isSearching}\n                      currentUsers={app.AppUsers || []}\n                      allUsers={company.users || []}\n                    />\n                  ))\n                ) : (\n                  <AddProjectCard />\n                )}\n              </div>\n              <Divider style={{ marginTop: 20 }} />\n            </div>\n          );\n        })\n      ) : (\n        <Typography>Не найдено никаикх компаний или проектов</Typography>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 345,\n    margin: '10px 0px 10px 10px'\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport default function CompanyCard({\n  companyName = \"Лизард ООО\",\n  companyDescription = \"Описание компании Лизард ООО\",\n  imageUrl = \"https://images.pexels.com/photos/927497/pexels-photo-927497.jpeg?cs=srgb&dl=green-reptile-927497.jpg&fm=jpg\",\n}) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={imageUrl}  \n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {companyName}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {companyDescription}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250,\n    margin: \"10px 0px 10px 10px\",\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport default function ProjectCard({\n  projectName = \"НацПроект\",\n  companyName = \"Лизард ООО\",\n}) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {projectName}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {companyName}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Person from \"@material-ui/icons/Person\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport GridLoader from \"react-spinners/GridLoader\";\n\nimport CompanyCard from \"./CompanyCard\";\nimport ProjectCard from \"./ProjectCard\";\nimport { startLoading } from \"./profileActions\";\n\nconst useGetData = () => {\n  const { isDataLoaded } = useSelector((state) => state.profileReducer);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    !isDataLoaded && dispatch(startLoading());\n  }, []);\n};\n\nexport default function Profile() {\n  useGetData();\n\n  const classes = useStyles();\n\n  const { isDataLoaded, isDataLoading, userData, companyData } = useSelector(\n    (state) => state.profileReducer\n  );\n\n  console.log(userData);\n  console.log(companyData);\n\n  if (isDataLoading) {\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: \"80vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <GridLoader loading={true} size={50} color={\"rgb(65,83,175)\"} />\n      </div>\n    );\n  }\n\n  if (!isDataLoaded) {\n    return null;\n  }\n\n  return (\n    <div style={{ padding: 10 }}>\n      <div\n        style={{\n          marginTop: 10,\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        <Person style={{ fontSize: 160 }} />\n        <Typography variant=\"h5\"> Личнные данные </Typography>\n        <List component=\"nav\" className={classes.list}>\n          <ListItem>\n            <Typography>Логин: </Typography>\n            <Typography style={{ fontWeight: \"bold\", marginLeft: 5 }}>\n              {userData.login}\n            </Typography>\n          </ListItem>\n          <Divider />\n          <ListItem>\n            <Typography>email: </Typography>\n            <Typography style={{ fontWeight: \"bold\", marginLeft: 5 }}>\n              {userData.email}\n            </Typography>\n          </ListItem>\n          <Divider />\n          <ListItem>\n            <Typography>Имя: </Typography>\n            <Typography style={{ fontWeight: \"bold\", marginLeft: 5 }}>\n              {userData.firstName}\n            </Typography>\n          </ListItem>\n          <Divider />\n          <ListItem>\n            <Typography>Фамиля: </Typography>\n            <Typography style={{ fontWeight: \"bold\", marginLeft: 5 }}>\n              {userData.secondName}\n            </Typography>\n          </ListItem>\n          {userData.isAdmin && (\n            <>\n              <Divider />\n              <ListItem>\n                <Typography>Статус: </Typography>\n                <Typography style={{ fontWeight: \"bold\", marginLeft: 5 }}>\n                  Администартор\n                </Typography>\n              </ListItem>\n            </>\n          )}\n        </List>\n\n        <Typography variant=\"h5\">Компания</Typography>\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n          <CompanyCard\n            companyName={userData.companyName}\n            companyDescription={`Описание компании ${userData.companyName}`}\n          />\n        </div>\n\n        <Typography variant=\"h5\" style={{ marginTop: 30 }}>\n          Список Проектов\n        </Typography>\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n          {userData.appNames.map((appName) => (\n            <ProjectCard\n              companyName={userData.companyName}\n              projectName={appName}\n              key={appName}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    width: \"100%\",\n    maxWidth: 560,\n    backgroundColor: theme.palette.background.paper,\n    border: `1px solid ${theme.palette.divider}`,\n    marginTop: 10,\n    marginBottom: 30,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n","import React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { red } from \"@material-ui/core/colors\";\nimport { useSelector } from \"react-redux\";\nimport { rootUrl } from \"../../config\";\nimport { useHistory } from \"react-router-dom\";\n\nimport axios from \"axios\";\n\nexport default function EditProfile() {\n  const classes = useStyles();\n\n  const { firstName, lastName } = useSelector((state) => state.appReducer);\n  const history = useHistory();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [name, setName] = useState(firstName);\n  const [surName, setSurName] = useState(lastName);\n  const [password, setPassword] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n\n  const onSubmit = async () => {\n    setIsLoading(true);\n\n    try {\n      const response = await axios.put(\n        `${rootUrl}/user`,\n        {\n          firstName: name,\n          secondName: surName,\n          password: password,\n        },\n        {\n          withCredentials: true,\n        }\n      );\n      history.push(\"/profile\");\n    } catch (e) {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ padding: 10 }}>\n      <Typography variant=\"h5\">Редактирование Профиля</Typography>\n\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <TextField\n          className={classes.textField}\n          label=\"Имя\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          variant=\"filled\"\n        />\n        <TextField\n          className={classes.textField}\n          label=\"Фамилия\"\n          variant=\"filled\"\n          value={surName}\n          onChange={(e) => setSurName(e.target.value)}\n        />\n        <TextField\n          className={classes.textField}\n          label=\"Пароль\"\n          variant=\"filled\"\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n\n      {isError && <Typography variant=\"subheader\">Ошибка</Typography>}\n\n      <div className={classes.submitButtonWrapper}>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          disabled={\n            isLoading || name === \"\" || surName === \"\" || password === \"\"\n          }\n          onClick={onSubmit}\n        >\n          {!isLoading ? \"Изменить\" : <span>&nbsp;&nbsp;</span>}\n        </Button>\n        {isLoading && (\n          <CircularProgress\n            size={24}\n            className={classes.submitButtonProgress}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  submitButtonWrapper: {\n    margin: theme.spacing(1),\n    position: \"relative\",\n    width: 200,\n  },\n  submitButtonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -8,\n    marginLeft: -12,\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  textField: {\n    width: 200,\n    margin: \"5px 0px\",\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport GridLoader from \"react-spinners/GridLoader\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { red } from \"@material-ui/core/colors\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { rootUrl } from \"../../config\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { getCompanies } from \"../Companies/companiesActions\";\n\nimport axios from \"axios\";\nimport { Menu } from \"@material-ui/core\";\n\nconst useGetCompanies = () => {\n  const { isDataLoaded } = useSelector((state) => state.companiesReducer);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    !isDataLoaded && dispatch(getCompanies());\n  }, []);\n};\n\nexport default function AddUser() {\n  const classes = useStyles();\n  useGetCompanies();\n  const { isDataLoading, isDataLoaded, companies } = useSelector(\n    (state) => state.companiesReducer\n  );\n  const history = useHistory();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [surName, setSurName] = useState(\"\");\n  const [selectedCompany, setSelectedCompany] = useState(-1);\n  const [email, setEmail] = useState(\"\");\n  const [login, setLogin] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n  const [goodResponse, setGoodResponse] = useState(\"\");\n\n  const clearFields = () => {\n    setName(\"\");\n    setSurName(\"\");\n    setSelectedCompany(-1);\n    setEmail(\"\");\n    setLogin(\"\");\n    setPassword(\"\");\n  };\n\n  const onSubmit = async () => {\n    setIsLoading(true);\n\n    try {\n      const response = await axios.post(\n        `${rootUrl}/user`,\n        {\n          firstName: name,\n          secondName: surName,\n          companyID: selectedCompany,\n          companyName: companies.find((o) => o.id === selectedCompany).name,\n          email: email,\n          login: login,\n          password: password,\n        },\n        {\n          withCredentials: true,\n        }\n      );\n      clearFields();\n      setGoodResponse(response.data);\n    } catch (e) {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (isDataLoading) {\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: \"80vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <GridLoader loading={true} size={50} color={\"rgb(65,83,175)\"} />\n      </div>\n    );\n  }\n\n  if (!isDataLoaded) {\n    return null;\n  }\n\n  return (\n    <div style={{ padding: 10 }}>\n      <Typography variant=\"h5\">Создать пользователя</Typography>\n\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <TextField\n          className={classes.textField}\n          label=\"Имя\"\n          variant=\"filled\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <TextField\n          className={classes.textField}\n          label=\"Фамилия\"\n          variant=\"filled\"\n          value={surName}\n          onChange={(e) => setSurName(e.target.value)}\n        />\n        <FormControl style={{ width: 200 }} variant=\"filled\">\n          <InputLabel>Компания</InputLabel>\n          <Select\n            value={selectedCompany}\n            onChange={(e) => setSelectedCompany(e.target.value)}\n          >\n            {companies.map((c) => (\n              <MenuItem value={c.id}>{c.name}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <TextField\n          className={classes.textField}\n          label=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          variant=\"filled\"\n        />\n        <TextField\n          className={classes.textField}\n          label=\"Логин\"\n          value={login}\n          onChange={(e) => setLogin(e.target.value)}\n          variant=\"filled\"\n        />\n        <TextField\n          className={classes.textField}\n          label=\"Пароль\"\n          variant=\"filled\"\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n\n      {isError && <Typography variant=\"subheader\">Ошибка</Typography>}\n\n      {goodResponse !== \"\" && (\n        <Typography variant=\"h6\" style={{ margin: \"10px 0px\" }}>\n          {goodResponse}\n        </Typography>\n      )}\n\n      <div className={classes.submitButtonWrapper}>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          disabled={\n            isLoading ||\n            name === \"\" ||\n            surName === \"\" ||\n            selectedCompany === -1 ||\n            email === \"\" ||\n            login === \"\" ||\n            password === \"\"\n          }\n          onClick={onSubmit}\n        >\n          {!isLoading ? \"Создать пользователя\" : <span>&nbsp;&nbsp;</span>}\n        </Button>\n        {isLoading && (\n          <CircularProgress\n            size={24}\n            className={classes.submitButtonProgress}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  submitButtonWrapper: {\n    margin: theme.spacing(1),\n    position: \"relative\",\n    width: 200,\n  },\n  submitButtonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -8,\n    marginLeft: -12,\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  textField: {\n    width: 200,\n    margin: \"5px 0px\",\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport GridLoader from \"react-spinners/GridLoader\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { red } from \"@material-ui/core/colors\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { rootUrl } from \"../../config\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { getCompanies } from \"../Companies/companiesActions\";\n\nimport axios from \"axios\";\n\nexport default function AddCompany() {\n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n  const [goodResponse, setGoodResponse] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const clearFields = () => {\n    setName(\"\");\n  };\n\n  const onSubmit = async () => {\n    setIsLoading(true);\n\n    try {\n      await axios.post(\n        `${rootUrl}/company`,\n        {\n          name: name,\n        },\n        {\n          withCredentials: true,\n        }\n      );\n      setGoodResponse(`Компания ${name} создана`);\n      dispatch(getCompanies());\n      clearFields();\n    } catch (e) {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ padding: 10 }}>\n      <Typography variant=\"h5\">Создать компанию</Typography>\n\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <TextField\n          className={classes.textField}\n          label=\"Имя Компании\"\n          variant=\"filled\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n      </div>\n\n      {isError && <Typography variant=\"subheader\">Ошибка</Typography>}\n\n      {goodResponse !== \"\" && (\n        <Typography variant=\"h6\" style={{ margin: \"10px 0px\" }}>\n          {goodResponse}\n        </Typography>\n      )}\n\n      <div className={classes.submitButtonWrapper}>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          disabled={isLoading || name === \"\"}\n          onClick={onSubmit}\n        >\n          {!isLoading ? \"Создать Компанию\" : <span>&nbsp;&nbsp;</span>}\n        </Button>\n        {isLoading && (\n          <CircularProgress\n            size={24}\n            className={classes.submitButtonProgress}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  submitButtonWrapper: {\n    margin: theme.spacing(1),\n    position: \"relative\",\n    width: 200,\n  },\n  submitButtonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -8,\n    marginLeft: -12,\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  textField: {\n    width: 200,\n    margin: \"5px 0px\",\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport GridLoader from \"react-spinners/GridLoader\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { red } from \"@material-ui/core/colors\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { rootUrl } from \"../../config\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { getCompanies } from \"../Companies/companiesActions\";\n\nimport axios from \"axios\";\nimport { Menu } from \"@material-ui/core\";\n\nconst useGetCompanies = () => {\n  const { isDataLoaded } = useSelector((state) => state.companiesReducer);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    !isDataLoaded && dispatch(getCompanies());\n  }, []);\n};\n\nexport default function AddProject() {\n  const classes = useStyles();\n  useGetCompanies();\n  const { isDataLoading, isDataLoaded, companies } = useSelector(\n    (state) => state.companiesReducer\n  );\n  const history = useHistory();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedCompany, setSelectedCompany] = useState(-1);\n  const [name, setName] = useState(\"\");\n\n  const [isError, setIsError] = useState(false);\n  const [goodResponse, setGoodResponse] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const clearFields = () => {\n    setSelectedCompany(-1);\n    setName(\"\");\n  };\n\n  const onSubmit = async () => {\n    setIsLoading(true);\n\n    try {\n      const response = await axios.post(\n        `${rootUrl}/project`,\n        {\n          project_name: name,\n          company_id: selectedCompany,\n        },\n        {\n          withCredentials: true,\n        }\n      );\n      clearFields();\n      dispatch(getCompanies());\n      setGoodResponse(response.data);\n    } catch (e) {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (isDataLoading) {\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: \"80vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <GridLoader loading={true} size={50} color={\"rgb(65,83,175)\"} />\n      </div>\n    );\n  }\n\n  if (!isDataLoaded) {\n    return null;\n  }\n\n  return (\n    <div style={{ padding: 10 }}>\n      <Typography variant=\"h5\">Добавить проект</Typography>\n\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <FormControl style={{ width: 200 }} variant=\"filled\">\n          <InputLabel>Компания</InputLabel>\n          <Select\n            value={selectedCompany}\n            onChange={(e) => setSelectedCompany(e.target.value)}\n          >\n            {companies.map((c) => (\n              <MenuItem value={c.id}>{c.name}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <TextField\n          className={classes.textField}\n          label=\"Имя\"\n          variant=\"filled\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n      </div>\n\n      {isError && <Typography variant=\"subheader\">Ошибка</Typography>}\n\n      {goodResponse !== \"\" && (\n        <Typography variant=\"h6\" style={{ margin: \"10px 0px\" }}>\n          {goodResponse}\n        </Typography>\n      )}\n\n      <div className={classes.submitButtonWrapper}>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          disabled={isLoading || name === \"\" || selectedCompany === -1}\n          onClick={onSubmit}\n        >\n          {!isLoading ? \"Добавить Проект\" : <span>&nbsp;&nbsp;</span>}\n        </Button>\n        {isLoading && (\n          <CircularProgress\n            size={24}\n            className={classes.submitButtonProgress}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  submitButtonWrapper: {\n    margin: theme.spacing(1),\n    position: \"relative\",\n    width: 200,\n  },\n  submitButtonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -8,\n    marginLeft: -12,\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  textField: {\n    width: 200,\n    margin: \"5px 0px\",\n  },\n}));\n","import React from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport TableChartIcon from \"@material-ui/icons/TableChart\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport AddCompanyIcon from \"@material-ui/icons/GroupAdd\";\nimport AddProjectIcon from '@material-ui/icons/PostAdd';\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logoutAction } from \"../scenes/Login/loginActions\";\n\nexport default function LeftMenu() {\n  const history = useHistory();\n\n  const { isAdmin } = useSelector((state) => state.appReducer);\n  const dispatch = useDispatch();\n\n  return (\n    <Drawer variant=\"permanent\" style={{ top: \"auto\" }}>\n      <div\n        style={{\n          width: \"220px\",\n          marginTop: \"64px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"flex-start\",\n          height: \"100%\",\n        }}\n      >\n        <List>\n          <ListItem\n            button\n            key={\"Таблицы\"}\n            onClick={() => history.push(\"/tables\")}\n          >\n            <ListItemIcon>\n              <TableChartIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Таблицы\"} />\n          </ListItem>\n          <ListItem\n            button\n            key={\"Компании и Проекты\"}\n            onClick={() => history.push(\"/companies\")}\n          >\n            <ListItemIcon>\n              <BusinessIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Компании и Проекты\"} />\n          </ListItem>\n        </List>\n\n        {isAdmin && (\n          <>\n            <Divider />\n            <List>\n              <ListItem\n                button\n                key={\"Таблицы\"}\n                onClick={() => history.push(\"/user/add\")}\n              >\n                <ListItemIcon>\n                  <PersonAddIcon />\n                </ListItemIcon>\n                <ListItemText primary={\"Создать пользователя\"} />\n              </ListItem>\n            </List>\n            <List>\n              <ListItem\n                button\n                key={\"Таблицы\"}\n                onClick={() => history.push(\"/company/add\")}\n              >\n                <ListItemIcon>\n                  <AddCompanyIcon />\n                </ListItemIcon>\n                <ListItemText primary={\"Создать компанию\"} />\n              </ListItem>\n            </List>\n            <List>\n              <ListItem\n                button\n                key={\"Таблицы\"}\n                onClick={() => history.push(\"/project/add\")}\n              >\n                <ListItemIcon>\n                  <AddProjectIcon />\n                </ListItemIcon>\n                <ListItemText primary={\"Добавить проект\"} />\n              </ListItem>\n            </List>\n          </>\n        )}\n\n        <Divider style={{ marginTop: \"auto\" }} />\n        <List>\n          <ListItem\n            button\n            key={\"Выйти\"}\n            onClick={() => dispatch(logoutAction())}\n          >\n            <ListItemIcon>\n              <ExitToAppIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Выйты\"} />\n          </ListItem>\n        </List>\n      </div>\n    </Drawer>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport BeachAccess from \"@material-ui/icons/BeachAccess\";\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Divider from \"@material-ui/core/Divider\";\n\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { logoutAction } from \"../scenes/Login/loginActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  companyLogo: {\n    marginRight: theme.spacing(2),\n  },\n  userNameTypography: {\n    marginRight: theme.spacing(1),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function TopMenu() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const dispatch = useDispatch();\n\n  const { firstName, lastName, isAdmin } = useSelector(\n    (state) => state.appReducer\n  );\n\n  const history = useHistory();\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar>\n        <BeachAccess className={classes.companyLogo} />\n        <Typography variant=\"h5\" className={classes.title}>\n          FORTCOM\n        </Typography>\n\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          {isAdmin && (\n            <Typography\n              variant=\"subtitle2\"\n              className={classes.userNameTypography}\n            >\n              Администратор\n            </Typography>\n          )}\n\n          <Typography\n            variant=\"subtitle2\"\n            className={classes.userNameTypography}\n          >\n            {firstName} {lastName}\n          </Typography>\n          <IconButton\n            aria-label=\"account of current user\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            onClick={handleMenu}\n            color=\"inherit\"\n          >\n            <SettingsIcon />\n          </IconButton>\n          <Menu\n            id=\"menu-appbar\"\n            anchorEl={anchorEl}\n            open={open}\n            onClose={handleClose}\n          >\n            <MenuItem\n              onClick={() => {\n                handleClose();\n                history.push(\"/profile\");\n              }}\n            >\n              Профиль\n            </MenuItem>\n\n            <Divider />\n\n            <MenuItem\n              onClick={() => {\n                handleClose();\n                history.push(\"/profile/edit\");\n              }}\n            >\n              Редактировать\n            </MenuItem>\n\n            <Divider />\n\n            <MenuItem onClick={() => dispatch(logoutAction())}>Выйти</MenuItem>\n          </Menu>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Login from \"../scenes/Login\";\nimport Tables from \"../scenes/Tables\";\nimport Companies from \"../scenes/Companies\";\nimport Profile from \"../scenes/Profile\";\nimport EditProfile from \"../scenes/EditProfile\";\nimport AddUser from \"../scenes/AddUser\";\nimport AddCompany from \"../scenes/AddCompany\";\nimport AddProject from \"../scenes/AddProject\";\nimport LeftMenu from \"../components/LeftMenu\";\nimport TopMenu from \"../components/TopMenu\";\nimport { authenticate } from \"./appActions\";\n\nconst useAuth = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(authenticate());\n  }, []);\n};\n\nexport default function App() {\n  const { isLoggedIn, initAuth } = useSelector((state) => state.appReducer);\n\n  useAuth();\n\n  if (!initAuth) {\n    return null;\n  }\n\n  return (\n    <Router>\n      <div>\n        {isLoggedIn && (\n          <>\n            <LeftMenu />\n            <TopMenu />\n          </>\n        )}\n        <div\n          style={isLoggedIn ? { marginLeft: \"220px\", marginTop: \"64px\" } : {}}\n        >\n          <Switch>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <ProtectedRoute exact path=\"/\">\n              <Redirect\n                to={{\n                  pathname: \"/tables\",\n                }}\n              />\n            </ProtectedRoute>\n            <ProtectedRoute exact path=\"/tables\">\n              <Tables />\n            </ProtectedRoute>\n            <ProtectedRoute exact path=\"/companies\">\n              <Companies />\n            </ProtectedRoute>\n            <ProtectedRoute exact path=\"/profile\">\n              <Profile />\n            </ProtectedRoute>\n            <ProtectedRoute exact path=\"/profile/edit\">\n              <EditProfile />\n            </ProtectedRoute>\n            <ProtectedRoute exact path=\"/user/add\">\n              <AddUser />\n            </ProtectedRoute>\n            <ProtectedRoute exact path=\"/company/add\">\n              <AddCompany />\n            </ProtectedRoute>\n            <ProtectedRoute exact path=\"/project/add\">\n              <AddProject />\n            </ProtectedRoute>\n            <ProtectedRoute path=\"*\">\n              <span>no such page</span>\n            </ProtectedRoute>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nconst ProtectedRoute = ({ children, ...rest }) => {\n  const { isLoggedIn } = useSelector((state) => state.appReducer);\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isLoggedIn ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./rootReducer\";\nimport App from \"./app/App\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}